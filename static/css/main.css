/* Fonts & colors facelifting Kate */

 :root{
    /* Sans stack with robust fallbacks */
    --font-sans: "Roboto", "Segoe UI", "Inter", "Helvetica Neue", Arial, system-ui, -apple-system, "Noto Sans", "Liberation Sans", sans-serif;
    --font-mono: "Roboto Mono", "Consolas", "SFMono-Regular", "Menlo", "ui-monospace", "monospace";
    

    /* === Weight size/line-height family === */

    /* TITLE Fonts */
    --type-h1: 800 clamp(48px, 6.4vw, 64px)/1.2 var(--font-sans);
    --type-h2: 700 clamp(18px, 2.2vw, 28px)/1.2 var(--font-sans);
    --type-h3: 800 18px/1.25 var(--font-sans); 
    --type-h4: 400 14px/1.3 var(--font-sans); 

    /* BODY Fonts */
    --type-button-regular: 400 16px/1.35 var(--font-sans); 
    --type-button-bold: 700 16px/1.35 var(--font-sans); 

    /* CAPTION Small Fonts */
    --type-caption-regular:  400 12px/1.3  var(--font-sans);
    --type-caption-bold:  700 12px/1.3  var(--font-sans);

    /* Display Fonts */
    --type-display-mono-regular: 400 16px/1.35 var(--font-mono);
    --type-display-mono-bold:    700 16px/1.35 var(--font-mono);
    
    /* INFO BAR Fonts */
    --type-caption-mono-regular:   400 14px/1.30 var(--font-mono);
    --type-caption-mono-bold:      700 14px/1.30 var(--font-mono);



    /* === Palette === */

    /* Active font: button-text-active, icon-active, */
    --color-white: #ffffff;

    /* Title font */
    --color-light: /* rgb(255, 0, 200);*/  #dadada; 
    --text-inactive: #757575;

    --button-active: #707070;
    --button-inactive: #404040;


    /* Drawer active background, Drawer inactive icons */
    --color-drawer-bg: #303030;

    /* Inactive drawer */
    --color-drawer-inactive-bg: #252525;

    /* Main background */
    --color-bg: #202020;

    /* Display, button strips */
    --color-black: black;


    /* KILL ALL Aactive, Attention Icons, Throttle fill */
    --active-yellow: #FFBD0A;
    
    /* Payload buttons, KILL ALL Inactive */
    --inactive-yellow: #9a7000;

    --gauge-red: #D0021B;
    --gauge-green: #009100;
    --gauge-blue: #1f8fff;
    --color-tech: rgb(255, 0, 200); 
    } 




/* DISPLAY FONTS styles */

    .display-value, 
    .display-unit, 
    .display-value-small, 
    .display-unit-small { 
    letter-spacing: 0.4px; /* mono tracking tech look */
    } 

    .display-label { 
    font: var(--type-button-regular); 
    color: var(--color-light);
    }
    .display-value{
    /* mono 16px bold */
    font: var(--type-display-mono-bold);
    color: var(--color-white);
    }
    .display-unit{
    /* mono 16px regular */
    font: var(--type-display-mono-regular);
    color: var(--color-light);
    }

    .display-value-small { font: var(--type-caption-mono-bold);   }
    .display-unit-small  { font: var(--type-caption-mono-regular); }
    .display-label-small { font: var(--type-caption-regular); 
    color: var(--color-light);
    }
    






/* Kill hover/press/focus styles when locked */
#btn-frequency[data-locked="1"] .toggle-btn {
  pointer-events: none;         /* no hover/click */
  cursor: default;
}
#btn-frequency[data-locked="1"] .toggle-btn:hover,
#btn-frequency[data-locked="1"] .toggle-btn:active,
#btn-frequency[data-locked="1"] .toggle-btn:focus,
#btn-frequency[data-locked="1"] .toggle-btn:focus-visible {
  filter: none;
  transform: none;
  box-shadow: none;
  outline: none;
}




/* MAGENTA / ERROR / BORDER */
    * { outline: 1px dashed rgba(255, 0, 221, 0);}

    



    /* Reset and base styles */
        * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;

        /* ban on allocation */
        user-select: none; 			
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        }




        body {
        font-family: var(--font-sans);
        background-color: var(--color-bg);
        color: var(--color-white);
        line-height: 1.6;
        overflow-x: hidden;
        overflow-y: auto;
        height: auto;
        }
        
        html, body {
        margin: 0;
        padding: 0;
        height: 100vh;
        overflow-x: hidden;
        overflow-y: auto;
        }

        .scale-container {
        width: 100vw;
        height: 100vh;
        overflow-y: auto;
        overflow-x: hidden;
        display: flex;
        justify-content: center;
        align-items: flex-start;
        }

        .scale-wrapper {
        display: inline-block;
        transform-origin: top center;
        height: fit-content;
        }

        .control-screen {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        }

        #main {
        flex: 1;
        display: flex;
        flex-direction: column;
        overflow: hidden;
        overflow-y: auto;
        }
        .main-content {
        overflow-y: auto;
        max-height: calc(100vh - 160px);
        }




    /* INFO BAR */



        .info-bar {
        display: flex;               /* arrange items in a row */
        justify-content: space-between; /* spread elements across the width */
        align-items: center;          /* vertical centering */
        padding: 8px 16px;
        background-color: #202020;    /* dark background */
        color: #ffffff;               /* white text */
        font-size: 14px;
        border-bottom: 1px solid #202020; /* subtle separator */
        }

        /* Put icon + text on one line and center them vertically */
        .info-item {
        display: inline-flex;     /* single row */
        align-items: center;      /* vertical centering */
        gap: 6px;                 /* spacing between icon and text */
        height: 20px;             /* = icon box height */
        white-space: nowrap;      /* prevent wrapping that causes jumps */
        }
        
        
        /* Size and center the SVG icon */
        .info-icon {
        display: inline-flex;      /* keep it inline with text */
        align-items: center;       /* vertical centering */
        justify-content: center;   /* horizontal centering */
        width: 22px;               /* tweak if you need larger icon */
        height: 22px;
        }

        .info-icon img {
        width: 100%;               /* scale SVG to the box */
        height: 100%;
        display: block;            /* remove inline gaps */
        }

        /* Unit label (e.g., "GPS") */
        .info-unit {
        /* small caps look */
        font-family: Inter, system-ui, sans-serif;
        font-weight: 600;
        font-size: 14px;
        letter-spacing: 0.6px;         /* tech look */
        color: #757575;              /* muted gray */
        }

        /* Value text (e.g., "Locked") */
        .info-value {
        font-family: Inter, system-ui, sans-serif;
        font-weight: 600;
        font-size: 14px;
        color: #909090;  /* brighter than unit */
        }


        /* ALARM ICON */
        .alarm-icon{
        display:inline-flex;      /* one row */
        align-items:center;       /* vertical centering */
        justify-content:center;
        width:24px; height:24px;
        opacity: 0.15;

        }
        .alarm-icon img{
        width:100%; height:100%;
        display:block;            /* no extra whitespace */
        }

        /* 2) Active — bright amber (#FFBD0A) */
        .alarm-icon.is-active {
        opacity: 1;
        filter: invert(76%) sepia(90%) saturate(1180%) hue-rotate(357deg) 
        brightness(102%) contrast(103%);

        }
        .alarm-icon.is-active img {
        /* recolor white SVG to near-exact #FFBD0A */
        filter: invert(76%) sepia(90%) saturate(1180%) hue-rotate(357deg) 
        brightness(102%) contrast(103%);
        display: block;
        }


                
        /* Center the middle block like a modal when viewport ≥1600px */
        @media (min-width: 1024px){
        .info-bar{ position: relative; } /* anchor for absolute centering */

        .info-bar .info-item--center{
            position: absolute;           /* take out of flex flow */
            left: 50%;                    /* center in viewport */
            transform: translateX(-50%);  /* exact centering */
            z-index: 2;                   /* above, just in case */
            margin: 0;                    /* ignore inline gaps */
            width: max-content;           /* shrink to its contents */
            pointer-events: auto;         /* keep clickable */
        }
        }


    /* Navigation arrows */
        .header-inner {
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100px;
        z-index: 100;
        }

        .carousel-titles {
          position: absolute;
          top: 5vh;
          left: 50%;
          transform: translateX(-50%);
          z-index: 999;
          pointer-events: none;
        }

        .carousel-title {
            font: var(--type-h2);
            color: var(--c-h); /* <- apply the pink you defined */

          text-align: center;
          opacity: 0;
          transition: opacity 0.3s ease;
          position: absolute;
          left: 50%;
          transform: translateX(-50%);
          white-space: nowrap; 
        }

        .carousel-title.active {
          opacity: 1;
        }

        .nav-arrow {
            position: absolute;
            top: 5vh;
            background: none;        /* no background */
            border: none;            /* no border */
            border-radius: 0;        /* no rounding */
            color: #757575;
            font-size: 32px;         /* make triangle bigger if needed */
            cursor: pointer;
            z-index: 1000;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            width: auto;             /* no fixed size */
            height: auto;
            padding: 0;              /* no padding */
        }
        .nav-arrow:hover {
            transform: scale(1.2);   /* still animate on hover */
            filter: drop-shadow(0 0 8px rgb(100, 100, 100));
            color: rgb(255, 255, 255);
        }
        .nav-arrow.left {
            left: 5vh;
        }
        .nav-arrow.right {
            right: 5vh;
        }

        
    /* Screen indicator dots */
        .screen-indicator {
            position: absolute;
            bottom: 80px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 10px;
            z-index: 1000;
        }
        .indicator-dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background-color: #505050;
            transition: background-color 0.3s ease;
        }
        .indicator-dot.active {
            background-color: white;
        }

    /* Screens */
        .screen-main {
        flex: 1;
        display: flex;
        flex-direction: column;
        padding: 10px;
        width: 100%;
        }

        .screen-title {
          position: absolute;
          top: 5vh;
          left: 50%;
          transform: translateX(-50%);
          font-size: 2.1rem;
          font-weight: 600;
          color: #ffffff;
          z-index: 100;
        }

        .boat-control {
            flex: 1;
            display: grid;
            grid-template-columns: 60px 1fr 1fr 1fr 1fr 1fr 60px;
            gap: 20px;
            width: 100%;
            align-items: stretch;
            padding: 40px 0;
            padding-top: 80px;

        }
        .container {
          width: 100vw;
          height: 100vh;
          display: flex;
          flex-direction: column;
          position: relative;
        }

        .main-content {
          flex: 1;
          display: flex;
          flex-direction: column;
          position: relative;
        }

        .screen {
          flex: 1;
          display: none;
          flex-direction: column;
          position: relative;
        }

        .screen.active {
          display: flex;
        }

        /* Columns */
        .columns-wrapper.full-height {
          flex: 1;
          display: flex;
          flex-direction: row;
          padding-bottom: 50px;
        }

        .column {
          flex: 1;
          text-align: center;
          color: #fff;
          font-weight: bold;
          display: flex;
          align-items: center;
          justify-content: center;
        }
        .column.col-center {
          background-color: #444;
        }
        .column.col-left-center,
        .column.col-right-center {
          background-color: #3a3a3a;
          flex-direction: column;
          justify-content: space-evenly;

        }
        .column.left,
        .column.right {
          background-color: #3a3a3a;
          flex-direction: column;
          justify-content: space-evenly;
        }
        .column.side-left,
        .column.side-right {
          flex: 0 0 80px;
        }


    /*GAUGES */

    #gauges-all {
    display: grid;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 997;

    grid-template-columns: 0 1fr 0 0 0 1fr 0;
    width: 130vw;
    pointer-events: none;
    }

    /* Левая колонка (вторая из пяти) = примерно 20% экрана */
    #gauges-all > .gauge-1,
    #gauges-all > .gauge-2,
    #gauges-all > .gauge-3,
    #gauges-all > .gauge-4 {
    grid-column: 2;
    }

    /* Правая колонка (четвёртая из пяти) = примерно 80% экрана */
    #gauges-all > .gauge-5,
    #gauges-all > .gauge-6,
    #gauges-all > .gauge-7,
    #gauges-all > .gauge-8 {
    grid-column: 6;
    }

    /* Общий стиль */
    #gauges-all > div {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 50px 0;
    }



    /* GAUGES LIST */

        .gauge-mini {
        display: flex;
        align-items: flex-start;
        gap: 8px;
        background-color: #202020;
        border-radius: 8px;
        padding: 8px 12px;
        font-family: sans-serif;
        }

        .gauge-icon {
        width: 32px;
        height: 32px;
        opacity: 0.2;
        object-fit: contain;
        margin-top: 6px; /* Slight vertical alignment */
        }

        .gauge-main {
        display: flex;
        flex-direction: column;
        line-height: 1;
        }

        .gauge-top-row {
        display: flex;
        align-items: baseline;
        gap: 4px;
        }

        .value {
        font-size: 40px;
        font-weight: 600;
        color: white;
        }

        .unit {
        font-size: 40px;
        color: #454545;
        }

        .caption {
        font-size: 10px;
        color: #555555;
        margin-top: 6px;
        padding-left: 1px; /* Slight indent to align visually under value */
        }




	/* THROTTLE MODAL */

        /* Throttle Wrapper — absolute position relative to boat */
        .throttle-wrapper {
        position: absolute;
        top: 50%;

        /* Layout variables */
        --boatW: clamp(220px, 28vw, 520px);   /* boat visual width model */
        --gap: clamp(16px, 3vw, 48px);        /* space between boat and throttle */
        --throttleW: 70px;                    /* expanded width of the panel */
        --collapsedW: 50px;                   /* collapsed width of the panel */
        --nudgeX: 40px;                        /* fine horizontal offset */
        --nudgeY: 0px;                        /* fine vertical offset */

        /* Keep constant distance from centered boat */
        left: calc(50% - (var(--boatW)/2) - var(--gap) - var(--throttleW) + var(--nudgeX));
        transform: translateY(calc(-50% + var(--nudgeY)));
        z-index: 999;
        width: var(--throttleW);              /* wrapper always holds max width */
        }

        /* Panel core — centered; expands by width (no text squashing) */
        .mini-gear-toggle {
        width: var(--collapsedW);             /* collapsed width */
        height: 460px;
        border-radius: 12px;
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 6px 0;
        overflow: visible;
        cursor: pointer;
        margin: 0 auto;                       /* center in wrapper */
        transition: width 0.3s ease, height 0.3s ease;
        }

        /* Symmetric expansion */
        .throttle-wrapper:hover .mini-gear-toggle,
        .throttle-wrapper.expanded .mini-gear-toggle {
        width: 100%;                          /* expands to wrapper width */
        }

        /* Track */
        .gear-track {
        position: relative;
        width: 20px;                          /* narrow when collapsed */
        height: 100%;
        background: var(--color-black);
        border: 1px solid var(--button-inactive);
        border-radius: 6px;
        margin: 0 auto;                       /* keep centered */
        z-index: 0;
        overflow: visible;
        transition: width 0.3s ease;
        }

        /* Track widens with the panel */
        .throttle-wrapper:hover .gear-track,
        .throttle-wrapper.expanded .gear-track {
        width: 100%;
        }

        /* Fill */
        .gear-fill {
        position: absolute;
        bottom: 50%;
        left: 0;
        width: 100%;
        background-color: var(--active-yellow);
        border: 0;
        height: 46%;
        z-index: 1;
        }

        /* Forward button */
        .forward-button {
        position: absolute;
        top: 2.5%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 100%;
        height: 20px;
        color: var(--color-white);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10;
        cursor: pointer;
        transition: all 0.3s ease;
        white-space: nowrap;
        }
        .text-forward { display: none; }
        .throttle-wrapper:hover .text-f { display: none; }
        .throttle-wrapper:hover .text-forward { display: inline; }

        /* Neutral button */
        .neutral-button {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 100%;
        height: 60px;
        background-color: var(--color-drawer-bg);
        border-radius: 4px;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10;
        cursor: pointer;
        transition: all 0.3s ease;
        white-space: nowrap;
        }
        .throttle-wrapper:hover .neutral-button {
        width: 100%;
        }
        .text-neutral { display: none; color: var(--color-white); }
        .throttle-wrapper:hover .text-n { display: none; }
        .throttle-wrapper:hover .text-neutral { display: inline; }

        /* Reverse button */
        .reverse-button {
        position: absolute;
        top: 97.5%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 100%;
        height: 20px;
        color: var(--color-white);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10;
        cursor: pointer;
        transition: all 0.3s ease;
        white-space: nowrap;
        }
        .text-reverse { display: none; }
        .throttle-wrapper:hover .text-r { display: none; }
        .throttle-wrapper:hover .text-reverse { display: inline; }

        /* Thumb */
        .gear-thumb {
        position: absolute;
        bottom: 50%;
        left: 50%;
        transform: translate(-50%, 50%);
        width: 36px;                          /* narrow when collapsed */
        height: 28px;
        background: linear-gradient(0deg, rgb(100, 100, 100) 0%, rgb(75, 75, 75) 100%);
        border-radius: 10px;
        z-index: 15;
        transition: width 0.1s ease;
        }
        .throttle-wrapper:hover .gear-thumb,
        .throttle-wrapper.expanded .gear-thumb {
        width: 100%;                          /* matches track width on expand */
        }
        .gear-thumb:hover {
        filter: drop-shadow(0 0 4px var(--color-white));
        }
        .gear-thumb-text {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
        pointer-events: none;
        text-align: center;
        color: var(--color-white);
        transition: all 0.3s ease;
        }
        .throttle-wrapper:hover .gear-thumb-text,
        .throttle-wrapper.expanded .gear-thumb-text {
        opacity: 1;
        color: var(--color-white);
        }

        /* Control buttons (stay in normal flow inside the panel) */
        .throttle-button {
        width: 100%;
        height: 10px;
        background-color: transparent;
        color: var(--button-inactive);
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        }
        .throttle-up { margin-left: -1px; }
        .throttle-icon { transition: all 0.2s ease; }
        .throttle-button:hover .throttle-icon {
        transform: scale(1.2);
        filter: drop-shadow(0 0 8px var(--color-white));
        color: var(--color-white);
        }

        /* Expanded state via class (e.g., gamepad) */
        .throttle-wrapper.expanded .text-f { display: none; font: var(--type-caption-mono-regular); }
        .throttle-wrapper.expanded .text-forward { display: inline; font: var(--type-caption-mono-regular); }
        .throttle-wrapper.expanded .text-n { display: none; font: var(--type-caption-mono-regular); }
        .throttle-wrapper.expanded .text-neutral { display: inline; font: var(--type-caption-mono-regular); }
        .throttle-wrapper.expanded .text-r { display: none; font: var(--type-caption-mono-regular); }
        .throttle-wrapper.expanded .text-reverse { display: inline; font: var(--type-caption-mono-regular); }
        .throttle-wrapper.expanded .mini-gear-toggle { width: 100%; }
        .throttle-wrapper.expanded .gear-thumb { width: 100%; }
        .throttle-wrapper.expanded .gear-thumb-text { display: flex; font: var(--type-caption-mono-bold); }

        /* Typography baseline for all throttle labels */
        .throttle-wrapper,
        .throttle-wrapper .forward-button,
        .throttle-wrapper .neutral-button,
        .throttle-wrapper .reverse-button,
        .throttle-wrapper .throttle-button {
            
        font: var(--type-caption-mono-regular); /* single source of truth */
        line-height: 1; /* optional: crisper vertical alignment */
        /* optional: lock mono family if you use it via tokens */
        /* font-family: var(--font-mono, ui-monospace, SFMono-Regular, Menlo, monospace); */
        }

        .throttle-wrapper .gear-thumb-text {
        font: var(--type-caption-mono-bold);
        }



    /* RULE RUDDER ANGLE INDICATOR */


    /* RUDDER ANGLE INDICATOR */
       .rudder-wrapper {
            top: 15%;                       /* Vertical offset from the top of the container */
            position: fixed;
            top: 50%;
            left: 50%;
            display: flex;                  /* Use flexbox for vertical layout */
            flex-direction: column;        /* Stack child elements vertically */
            align-items: center;           /* Center child elements horizontally */

            width: 100%;                   /* Take full available width */
            max-width: 300px;              /* But don't exceed 200px */
            box-sizing: border-box;        /* Include padding in width/height calculation */
            padding: 50px;                 /* Inner spacing */

            z-index: 6;                    /* Layer position (on top of lower elements) */
        }

        .rudder-gauge {
        top: calc(40% + 6vw); /* position below the boat */
        left: 50%;
        width: fit-content;
        height: 120px;
        z-index: 2;
        pointer-events: none;
        overflow: visible; 
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        
        }
        .rudder-gauge svg {
            display: block;
            margin: 0 auto;
            width: 100%;
            height: auto;
        }
        /* Rudder Angle UNPUT */
        /* Rudder input container */
        .rudder-input-control {

        display: flex;                /* Align elements horizontally */
        gap: 6px;                     /* Space between input and ° sign */
        justify-content: center;
        font-family: sans-serif;
        font-size: 14px;
        z-index: 10;
        white-space: nowrap
        }
        /* Input field styling */
        #rudder-input {
        width: 50px;                  /* Fixed width for neat alignment */
        padding: 4px;                 /* Inner padding for comfort */
        font-size: 14px;              /* Match text size to label */
        color: #ffffff;       
        background: #000000;  
        border: 1px solid #757575; 
        border-radius: 4px;
        
        }
        .rudder-input-control label {
        color: #757575; 
        font-size: 14px;
        }

    /* BOAT // Rudder & Trim GAUGE row */

    /* Row container */
    .boat-stats-row {
    display: flex;
    gap: 48px;            /* space between left/right chips */
    align-items: baseline;/* align icon+number to same baseline */
    justify-content: center;
    margin-top: 8px;      /* adjust to fit under your existing blocks */
    }

    /* Each stat chip */
    .boat-stat {
    display: inline-flex;
    align-items: center;  /* icon and number share baseline */
    gap: 10px;
    color: #e7e7e7;         /* inherit or override to your palette */
    font-family: inherit;
    }

    /* Icon container */
    .boat-stat__icon {
    display: inline-flex;
    line-height: 1;
    }

    /* Icon itself (works for both <img> and <svg>) */
    .boat-icon {
    width: 24px;   /* tune to match your UI scale */
    height: 24px;
    display: block;
    object-fit: contain;   /* ensures <img> scales correctly */
    flex-shrink: 0;        /* prevents icon from shrinking */
    color: currentColor;   /* for inline SVGs still allows inheriting text color */
    }

    /* Value */
    .boat-stat__value {
    display: inline-flex;
    align-items: baseline;  /* number + degree on one line bottom-aligned */
    gap: 4px;
    font-weight: 600;
    letter-spacing: 0.2px;
    }
    .boat-stat__value #rudder-angle-value,
    .boat-stat__value #trim-value {
    font-size: 16px;      /* main number size */
    line-height: 1;
    }

    /* Small degree sign */
    .boat-stat__value .deg {
    font-size: 16px;
    line-height: 1;
    vertical-align: top;   /* raises degree slightly */
    opacity: 0.85;
    }

    /* Update feedback effect */
    .boat-stat.updating .boat-stat__value {
    text-shadow: 0 0 8px rgba(255,255,255,0.15);
    }

  


    /* FOOTER */


    /* Status bar */
        .status-bar {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;

        height: 60px;
        background-color: #101010;
        border-top: 1px solid #333;
        display: flex;
        align-items: center;
        padding: 0 20px;
        z-index: 999;
        cursor: pointer;
        }

        .status-bar:hover {
            background-color: #171717;
        }
        .status-content {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        .connection-indicator {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background-color: dodgerblue;
            animation: pulse-connection 2s infinite;
        }
        @keyframes pulse-connection {
            0% { 
                box-shadow: 0 0 5px rgba(52, 152, 219, 0.5);
                transform: scale(1);
            }
            50% { 
                box-shadow: 0 0 25px rgba(52, 152, 219, 1);
                transform: scale(1.1);
            }
            100% { 
                box-shadow: 0 0 5px rgba(52, 152, 219, 0.5);
                transform: scale(1);
            }
        }
        .connection-indicator.disconnected {
            background-color: red;
            animation: none;
        }
        .status-text {
            color: #e0e0e0;
            font-size: 16px;
        }

    /* Debug panel titles */
        body.connected .debug-box h3 {
            color: dodgerblue;
        }
        body.disconnected .debug-box h3 {
            color: red;
        }

    /* Debug panel */
        .debug-panel {
            position: absolute;
            bottom: 60px;
            left: 0;
            right: 0;
            background-color: black;
            border-top: 1px solid #353535;
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease;
            z-index: 2000;
        }
        .debug-panel.open {
            max-height: 300px;
        }
        .debug-content {
            padding: 0px;
            display: grid;
            grid-template-columns: 1fr 1fr 1fr; 
            gap: 0px;
        }
        .debug-box {
            background-color: black;
            border: 1px solid black;
            border-radius: 0px;
            padding: 15px;
        }
        .debug-box h3 {
            margin-top: 0;
            font-size: 16px;
            color: steelblue ;
            margin-bottom: 10px;
        }
        .debug-box pre {
            background-color: #202020;
            padding: 10px;
            border-radius: 4px;
            overflow-x: auto;
            font-family: 'Courier New', monospace;
            font-size: 12px;
            color: #ecf0f1;
            border: 1px solid #353535;
            max-height: 150px;
            overflow-y: auto;
        }

    /* Options */
        .options-box {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }
        .options-icons {
            display: flex;
            gap: 16px;
            margin-top: 10px;
        }
        .options-icon {
            width: 24px;
            height: 24px;
            filter: brightness(0) invert(1);
            transition: transform 0.2s ease;
            cursor: pointer;
        }
        .options-icon:hover {
            transform: scale(1.1);
            filter: drop-shadow(0 0 8px white);
        } 




    /* Boat container */
        .boat-image {
            z-index: 0;
            align-items: center;
            justify-content: center;
            width: 14.4vw;
            transform: scale(1.2);

        }
        .boat-image:hover {
            filter: drop-shadow(0 0 8px rgb(100, 100, 100));
        }
        

    /* EDIT Button MODAL */


        body.editing-mode {
            background-color: #000000;
        }
        body.editing-mode .control-button button {
            background-color: #757575 !important;
            border: 2px dashed #ffffff;
            box-shadow: none !important;
        }
        body.editing-mode .safety-cap {
            pointer-events: none;
            opacity: 0.4;
        }
        .modal-container {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 3100;
            background-color: transparent;
        }

    /* MODAL Button edit WINDOW BASE */
        .modal-window {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #202020;
            color: #fff;
            border-radius: 8px;
            padding: 20px;
            width: 400px;
            z-index: 3101;
            box-shadow: 0 0 20px rgba(0,0,0,0.5);
        }
        #edit-modal-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            z-index: 10000;
            pointer-events: auto;
        }

    /* MODAL Button edit WINDOW inside */
        .editor-screen-title {
            text-align: center;
            font-size: 2.1rem;
            font-weight: 600;
            color: #757575;
            padding: 4vh 0;
        }

    /* BASE */
        .editor-modal-backdrop {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%; /* fixed screen coverage */
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 999;
        }
        .editor-modal-window {
            background-color: #202020;
            padding: 0px 0px;
            border-radius: 1px;
            width: 360px;
            display: flex;
            flex-direction: column;
            align-items: center;
            color: white;
            padding-top: 26px;
            padding-bottom: 26px;
        }
        .editor-modal-title {
             font: var(--typo-h2);
          color: var(--c-h2); /* <- apply the pink you defined */
            margin-bottom: 24px;
            margin: 0 0 12px 0;
            text-align: center;
        }

        .editor-modal-content {
            width: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .editor-modal-actions {
            margin-top: 30px;
            display: flex;
            gap: 16px;
        }

    /* PREVIEW WINDOW */
        .editor-preview-frame {
            width: 288px;
            height: 240px;
            border: 1px solid #2a2a2a;
            background-color: #2a2a2a;
            border-radius: 10px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            margin-bottom: 12px;
            padding: 12px;
            position: relative;
        }
        .editor-preview-content {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            position: relative;
            height: 100%;
            width: 100%;
        }

    /* Preview Button */
        .editor-preview-button {
            width: 150px;
            height: 75px;
            background-color: rgb(30, 30, 30);
            border: none;
            border-radius: 10px;
            font-size: 12px;
            font-weight: 600;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            margin-top: auto;
            margin-bottom: auto;

        }
        .editor-control-button {
            position: relative;
            margin-top: 90px;
            width: 120px;
            height: 100px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
        }
        .editor-button-icon {
            width: 40px;
            height: 40px;
            filter: brightness(0) saturate(100%) invert(44%) sepia(0%) saturate(0%) hue-rotate(175deg) brightness(96%) contrast(85%);

        }
        .editor-button-label {
            margin-top: 6px;
            font-size: 0.9rem;
            text-align: center;
            color: #757575;
        }

    /* Change Preview Button Icon */
        .editor-button-icon {
            filter: brightness(0) saturate(100%) invert(44%) sepia(0%) saturate(0%) hue-rotate(175deg) brightness(96%) contrast(85%);
            transition: filter 0.2s ease;
        }
        .editor-preview-button:hover .editor-button-icon {
            filter: none; /* Shows original white icon on hover */
            filter: drop-shadow(0 0 10px rgb(120, 120, 120));
        }
        .editor-icon-picker-modal {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #202020;
            border: 1px solid #757575;
            padding: 20px;
            border-radius: 8px;
            display: none; /* Hidden by default */
            z-index: 1000;
        }
        .editor-icon-grid {
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
        }
        .editor-icon-grid img {
            width: 40px;
            height: 40px;
            cursor: pointer;
            filter: brightness(0) saturate(100%) invert(44%);
            transition: filter 0.2s ease;
        }

    /* Hover effect */
        .editor-icon-grid img:hover {
            filter: none;
            transform: scale(1.05);
            filter: drop-shadow(0 0 10px rgb(120, 120, 120));
        }
        .editor-button-icon {
            transition: filter 0.2s ease, transform 0.2s ease;
        }
        .editor-button-icon.icon-selected {
            filter: none;
        }
        .editor-preview-button:hover .editor-button-icon.icon-selected {
            filter: drop-shadow(0 0 10px rgb(120, 120, 120));
            transform: scale(1.05);
        }

    /* Safety Cap */
        .editor-safety-cap {
            position: absolute;
            top: 0;
            left: 50%;
            transform: translateX(-50%) translateY(-110%);
            width: 150px;
            height: 75px;
            background: repeating-linear-gradient(-45deg, #9a7000, #9a7000 12px, black 8px, black 25px);
            border-radius: 10px;
            z-index: 2;
            outline: 2px solid #9a7000;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 10px;
            color: rgba(0, 0, 0, 0.7);
            font-weight: bold;
            text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.4);
            pointer-events: none;
        }
        .editor-no-safety-cap {
            position: absolute;
            top: 0;
            left: 50%;
            transform: translateX(-50%) translateY(-110%);
            width: 150px;
            height: 75px;
            background:  #2a2a2a;
            border-radius: 10px;
            z-index: 2;
            outline: 2px dotted #757575;
            box-shadow: 0 0 0 3px #2a2a2a; /* solid outer border */
            display: flex;
            justify-content: center;
            pointer-events: none;
        }
        .editor-cap-icon {
            width: 24px;
            height: 24px;
            filter: brightness(0) invert(1);
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            pointer-events: none;
        }

    /* Safety Cap Hover */
        .editor-safety-cap-hover {
            position: absolute;
            top: 0;
            left: 50%;
            transform: translateX(-50%) translateY(-110%);
            width: 150px;
            height: 75px;
            background: repeating-linear-gradient(-45deg, #41361c, #41361c 12px, #202020 8px, #202020 25px);
            border-radius: 10px;
            z-index: 2;
            outline: 2px solid #41361c;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 10px;
            color: rgba(0, 0, 0, 0.7);
            font-weight: bold;
            text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.4);
            pointer-events: none;
        }
        .editor-cap-container {
            position: absolute;
            top: -80px; /* shift upwards */
            left: 50%;
            transform: translateX(-50%);
            width: 150px;
            height: 75px;
            z-index: 2;
        }

    /* Common styles for all states */
        .editor-cap-container .editor-safety-cap,
        .editor-cap-container .editor-no-safety-cap,
        .editor-cap-container .editor-safety-cap-hover {
            position: absolute;
            top: 0;
            left: 0;
            transform: none; /* make sure there’s no inherited translate */
            width: 150px;
            height: 75px;
            border-radius: 10px;
            pointer-events: none;
        }

    /* Hover effect */
        .editor-cap-container .editor-safety-cap-hover {
            opacity: 0;
            transition: opacity 0.2s ease;
            z-index: 3;
        }
        .editor-cap-container:hover .editor-safety-cap-hover {
            opacity: 1;
        }

    /* State: safety cap visible */
        .editor-cap-container.state-safety .editor-safety-cap {
            display: block;
        }
        .editor-cap-container.state-safety .editor-no-safety-cap {
            display: none;
        }

    /* State: no safety cap visible */
        .editor-cap-container.state-no-cap .editor-safety-cap {
            display: none;
        }
        .editor-cap-container.state-no-cap .editor-no-safety-cap {
            display: block;
        }
        .editor-safety-cap img {
            width: 50px;        
            height: 50px;        
            filter: 
            brightness(0)
            drop-shadow(2px 0 0 #9a7000)
            drop-shadow(-2px 0 0 #9a7000)
            drop-shadow(0 2px 0 #9a7000)
            drop-shadow(0 -2px 0 #9a7000)
            drop-shadow(3px 3px 0 #9a7000)
            drop-shadow(-3px 3px 0 #9a7000)
            drop-shadow(3px -3px 0 #9a7000)
            drop-shadow(-3px -3px 0 #9a7000);
        }

    /* Label below Preview button */
        .editor-button-label[contenteditable="true"]:hover {
            color: #ffffff;
            font-weight: bold;
            cursor: text;
        }
        .editor-button-label-input {
            margin-top: 6px;
            font-size: 0.9rem;
            text-align: center;
            color: #ffffff;
            background-color: transparent;
            border: none;
            outline: none;
            border-bottom: 1px solid #757575;
            width: 100px;
            text-transform: uppercase;
        }
        .editor-button-label-input:focus {
            border-bottom: 1px solid #ffffff;
        }
        .editor-button-label[contenteditable="true"]:focus {
            outline: none; /* remove default focus outline */
            padding: 4px 6px; /* add inner spacing around the text */
            border: 1px dashed #757575; /* show a dashed border during editing */
            border-radius: 4px; /* slightly rounded corners */
            background-color: #2a2a2a; /* optional: gives subtle contrast while editing */
        }
        .editor-button-label.edited {
            color: #ffffff;        
            font-weight: bold;
            white-space: nowrap;
    
        }


    /* FUNCTION BUTTONS */

        .editor-options-row {
            width: 288px;
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
        }
        .editor-option-wrapper {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .editor-option-block {
            width: 64px;
            height: 64px;
            background-color: #2a2a2a;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .editor-option-block img {
            width: 32px;
            height: 32px;
            filter: brightness(0) saturate(100%) invert(44%) sepia(0%) saturate(0%) hue-rotate(175deg) brightness(96%) contrast(85%);
        }
        .editor-option-label {
            margin-top: 6px;
            font-size: 12px;
            color: #757575;
            text-align: center;
        }
        .editor-option-wrapper.active .editor-option-block {
            outline: 2px solid #ffffff;
            box-shadow: 0 0 4px #ffffff;
        }

    /* Active Function Buttons */
        .editor-option-wrapper.active .editor-option-block img {
            filter: none; /* Show the original white icon */
        }
        .editor-option-wrapper.active .editor-value-box {
            border-color: #ffffff;
        }
        .editor-option-wrapper.active .editor-value-box span {
            color: #ffffff;
        }
        .editor-option-wrapper.active .editor-option-label {
            color: #ffffff;
            font-weight: bold;
        }


    /* Timer Input label */
        .editor-value-box {
            position: relative;
            width: 90px;
            height: 30px;
            border: 1px solid #757575;
            border-radius: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-top: 8px;
            background-color: transparent;
            overflow: hidden;
        }
        .editor-value-box-wrapper {
            display: flex;
            justify-content: flex-end; /* align to the right */
            width: 288px;
            margin-top: 4px;
        }
        .editor-value-input {
            width: 100%;
            height: 100%;
            padding-right: 36px;
            background-color: transparent;
            border: none;
            font-size: 14px;
            font-family: 'Roboto', sans-serif;
            font-weight: 400;
            text-align: right;
            outline: none;
            position: relative;
            z-index: 2;
            color: #757575;

            
            /* remove arrows */
            appearance: textfield;
            -moz-appearance: textfield;
            -webkit-appearance: none;
        }
        .editor-value-input:disabled {
            color: #757575;
            cursor: not-allowed;
        }
        .editor-modal-window:not(.timer-active) .editor-arrow-controls {
            color: #757575;
            pointer-events: none;
        }
        .editor-arrow-controls {
            display: flex;
            flex-direction: column;
            justify-content: center;
            margin-right: 6px;
            margin-left: 6px;
            z-index: 2;
        }
        .editor-arrow-controls button {
            background: none;
            border: none;
            color: #757575;
            font-size: 8px;
            line-height: 10px;
            padding: 0;
            cursor: pointer;
            height: 10px;
        }
       /* Up arrow when timer button is activated */
        .editor-modal-window.timer-active .arrow-up:hover {
            color: #ffffff;
            font-weight: bold;
            text-shadow: 0 -1px 2px #ffffff;
        }
        /* Up down when timer button is activated */
        .editor-modal-window.timer-active .arrow-down:hover {
            color: #ffffff;
            font-weight: bold;
            text-shadow: 0 1px 2px #ffffff;
        }
        .editor-option-wrapper.active .editor-arrow-controls button {
            color: #ffffff;
            font-weight: bold;
        }
        .editor-value-input::-webkit-outer-spin-button,
        .editor-value-input::-webkit-inner-spin-button {
            appearance: none;
            -webkit-appearance: none;
            margin: 0;
        }
        /* ms unit label */
        .editor-unit-label {
            position: absolute;
            right: 8px;
            top: 50%;
            transform: translateY(-50%);
            color: #757575;
            font-size: 14px;
            pointer-events: none;
            transition: opacity 0.2s ease;
        }
        /* Active white text */
        .editor-modal-window.timer-active .editor-value-box {
            border-color: #ffffff;
        }
        .editor-modal-window.timer-active .editor-value-input {
            color: #ffffff;
        }
        .editor-modal-window.timer-active .editor-unit-label {
            color: #ffffff;
        }


    /* Input row layout */
        /* === Row container for label + input === */
        .editor-custom-input-row {
        display: flex;
        align-items: center;
        justify-content: space-between; /* aligns label left, input right */
        gap: 10px;                        /* space between label and field */
        margin-top: 16px;            /* top & bottom spacing */
        margin-bottom: 0px;
        font-family: 'Roboto', sans-serif;
        }
        .editor-custom-input-row:nth-of-type(2) {
        margin-top: 0px;
        margin-bottom: 0px;
        }
        /* Label (e.g., "CAN:") */
        .editor-custom-label {
        min-width: 40px;
        font-weight: normal;
        color: #757575;
        height: 32px;
        line-height: 32px;
        font-size: 12px;
        }
        /* Prefixed input block (shared styles for BN and HEX) */
        .editor-prefixed-wrapper,
        .bn-wrapper,
        .hex-wrapper {
        display: flex;
        align-items: center;
        background-color: #202020;
        border: 1px solid #757575;
        border-radius: 4px;
        overflow: hidden;
        height: 32px;
        }
        /* Specific margin between BN and HEX fields */
        .bn-wrapper {
        margin-right: 2px;
        }
        /* BN prefix inside the field */
        .bn-wrapper .editor-prefix,
        .editor-prefix {
        padding: 0 6px;
        color: #757575;
        font-family: monospace;
        font-size: 12px;
        display: flex;
        align-items: center;
        background: none;
        border: none;
        height: 100%;
        }
        /* Input for 3-digit BN code */
        .bn-wrapper .editor-prefixed-input,
        .editor-prefixed-input {
        width: 45px;
        padding: 0 6px;
        font-size: 12px;
        background: none;
        border: none;
        color: #757575;
        height: 100%;
        outline: none;
        }
        /* Input for HEX values */
        .hex-wrapper input {
        width: 154px;
        padding: 0 10px;
        font-size: 12px;
        background: none;
        border: none;
        color: #757575;
        height: 100%;
        outline: none;
        }
        /* Remove input focus outline */
        .editor-prefixed-input:focus,
        .hex-wrapper input:focus {
        outline: none;
        box-shadow: none;
        }
        /* Dropdown (select) styling */
        .editor-select {
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        background-color: #202020;
        color: #757575;
        border: 1px solid #757575;
        border-radius: 4px;
        padding: 6px 10px;
        font-size: 14px;
        font-family: 'Roboto', sans-serif;
        width: 196px;
        background-image: url('data:image/svg+xml;utf8,<svg fill="%23aaa" height="20" width="20" viewBox="0 0 24 24"><path d="M7 10l5 5 5-5z"/></svg>');
        background-repeat: no-repeat;
        background-position: right 8px center;
        background-size: 16px;
        padding-right: 30px; /* reserve space for dropdown icon */
        }
        /* Arrow Dropdown icon */
        .editor-select {
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" fill="%23757575" height="24" width="24" viewBox="0 0 24 24"><path d="M7 10l5 5 5-5z"/></svg>');
        background-repeat: no-repeat;
        background-position: right 10px center;
        background-size: 28px;
        padding-right: 32px;
        }



        /* Buttons Cancel + Create */
        .editor-modal-actions {
            display: flex;
            justify-content: space-between; /* aligns buttons to opposite sides */
            width: 288px;
            margin-top: 30px;
        }
        .editor-cancel-button,
        .editor-apply-button {
            padding: 10px 30px;
            font-size: 1rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: sans-serif;
            width: 48%; /* optional: keeps buttons similar in size */
        }
        .editor-cancel-button {
            background-color: transparent;
            color: #757575;
            border: 1px solid #757575;
        }
        .editor-apply-button {
            background-color: transparent;
            color: #757575;
            border: 1px solid #757575;
        }
        .editor-cancel-button:hover,
        .editor-apply-button:hover {
            outline: 2px solid #ffffff;
            color: #ffffff;
            font-weight: bold;
        }

        /* Close window */
        .editor-modal-window {
            position: relative; /* It is necessary to position the cross inside */
        }
        .editor-modal-close {
            position: absolute;
            top: 12px;
            right: 12px;
            font-size: 18px;
            color: #999;
            cursor: pointer;
            transition: color 0.2s ease;
        }
        .editor-modal-close:hover {
            color: white;
        }
        
        /* Buttons Fuctions Hover */
        .editor-option-wrapper:hover .editor-option-block {
            box-shadow: 0 0 6px #ffffff;
            transition: all 0.2s ease;
        }
        .editor-option-wrapper:hover .editor-option-label {
            color: #ffffff;
            transition: all 0.2s ease;

        }



    /* TRIM MODAL */

        /* TRIM MODAL */
        #trim-modal-backdrop {
            z-index: 3200;
        }
        #trim-modal-container {
            z-index: 3300;
        }
        /* TRIM MODAL Background image */
        .trim-image-wrapper {
            position: relative;
            width: 100%;
            height: 340px; /* or any value you need */
            overflow: hidden;
        }
        .trim-center-image {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 100%;
            height: auto;
        }
        .editor-modal-actions {
            margin: 4;
            margin-bottom: 12px;
        }
        .trim-center-image {
            pointer-events: none;
        }
        /* TRIM MODAL Arrow */
        .trim-center-image {
        width: 100%;
        height: auto;
        display: block;
        }
        /* gauge overlay container */
        .trim-gauge-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 2;
        }
        /* pointer container */
        .trim-pointer {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 250px;  /* or your square size */
        height: 250px;
        transform: translate(-50%, -50%);
        z-index: 3;
        pointer-events: none;
        }
        .trim-pointer-img {
        width: 100%;
        height: 100%;
        transform-origin: 50% 50%;
        transition: transform 0.3s ease;
        }
        /* SLIDER */
        .trim-slider-wrapper {
        position: relative;
        width: 80px;
        height: 340px; 
        margin-left: auto;
        margin-right: 0;
        margin-top: 0;
        margin-bottom: 0;
        z-index: 2;
        overflow: visible; 
        }
        .trim-labels {
        position: absolute;
        left: 8px;
        top: 0;
        width: 30px;
        height: 90%;
        font-size: 10px;
        font-family: 'Roboto', sans-serif;
        font-weight: 700;
        color: #757575;
        line-height: 15px;
        text-align: center;
        pointer-events: none;
        }
        /* Background track */
        .trim-track-bg {
        position: absolute;
        top: 10;
        left: 40px;
        width: 30px;
        height: 100%;
        background: black;
        border-radius: 10px;
        }
        /* Fill Yellow area */
        .trim-track-fill {
        position: absolute;
        background-color: #FFBD0A;
        border-radius: 9px;
        left: 0;
        bottom: 0; /* ✅ Anchor to bottom */
        left: 42px;
        width: 29%;
        z-index: 1;
        height: 100%;
        bottom: 2px
        }
        /* Thumb handle */
        .trim-thumb {
        position: absolute;
        left: 36px;
        width: 38px;
        height: 26px;
        background: radial-gradient(ellipse 50% 50% at 50% 50%, #939393 0%, #737373 100%);
        border-radius: 10%;
        transform: translateY(-50%);
        cursor: grab;
        z-index: 10;
        }
        .trim-thumb:hover {
        filter: drop-shadow(0 0 8px rgb(100, 100, 100));
        background: radial-gradient(ellipse 50% 50% at 50% 50%, #a8a8a8 0%, #848484 100%);
        }
        /* Thumb SLIDER */
        .trim-slider-overlay {
        position: absolute;
        top: 0;
        right: 0;
        height: 100%;
        display: flex;
        align-items: center;
        padding-right: 10px;
        z-index: 4;
        }
        /* READOUT */
        .trim-readout {
        position: absolute;
        left: -230px;
        bottom: 0;
        width: 60px;
        height: 40px;
        background-color: #000000;
        color: #fff;
        font-family: Roboto, sans-serif;
        font-weight: normal;
        font-size: 28px;
        text-align: center;
        line-height: 40px;
        border-radius: 4px;
        z-index: 6;
        }


    /* NEW VERSION */


        .gauges-left, .gauges-right,
        .buttons-left, .buttons-right {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
        }
        .buttons-left button,
        .buttons-right button {
        width: 100%; min-width: 100px;
        max-width: 140px;
        height: 120px;
        }
        .boat-center {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
        }
        .boat-center img {
        width: 100px;
        height: auto;
        margin-bottom: 16px;
        }
        .throttle-slider {
            width: 40px;
            max-width: 40px;
            height: 200px;
            background-color: #404040;
            border-radius: 8px;
            margin: auto;
        }
        .column-right,
        .throttle-gauge {
        display: flex;
        justify-content: center;
        align-items: center;
        }
        .button-bottom {
        display: flex;
        justify-content: center;
        gap: 16px;
        }
        .gauges-mobile,
        .all-buttons,
        .boat-center-mobile,
        .boat-row-mobile {
        display: none;
        }
        footer.screen-footer {
        background: #111;
        padding: 10px;
        text-align: center;
        }
 


/* NEW VERSION 2 */

    /* MOBILE VERSION */

    @media (max-width: 768px) {
    .screen-main {
        display: flex;
        flex-wrap: wrap;
        flex-direction: row;
        gap: 12px;
        justify-content: space-between; /* или flex-start / center */
        justify-content: center;
        padding-bottom: 30px;
        }
        }

        /* GAUGES BLOCK */
        .gauge-1, .gauge-2, .gauge-3, .gauge-4,
        .gauge-5, .gauge-6, .gauge-7, .gauge-8 {
            flex: 1 1 calc(25% - 12px); /* 4 в ряд */
            order: 1;
            margin: 5px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        /* CENTER BLOCK (boat + throttles) */
 

       .rudder-wrapper {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 998;

        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 28px;
        pointer-events: none;
        }


        /* BUTTONS BLOCK */
        .button-1, .button-2, .button-3, .button-4,
        .button-5, .button-6, .button-7, .button-8 {
            order: 3;
            margin: 5px;
        }


    
    /* TABLET VERSION */


    /* DESKTOP VERSION */


        @media (min-width: 769px) {
            .screen-main {
            display: grid;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 996;    
            grid-template-columns: repeat(7, 1fr);
            grid-auto-rows: min-content;
            gap: 30px;
            padding: 24px;
            align-items: center;
            justify-items: center;
        }
            .rudder-wrapper,
            .boat-image {
            pointer-events: auto;
            }


        .main-content {
            display: flex;
            flex-direction: column;
            max-width: 100%;
            flex-wrap: nowrap;
            overflow: hidden;
        }

        /* Левый throttle */
        .throttle-wrapper {
            grid-column: 1;
            grid-row: 2;
            justify-self: center;
        }

        /* Левые gauges */
        .gauge-1 { grid-column: 2; grid-row: 1; }
        .gauge-2 { grid-column: 2; grid-row: 2; }
        .gauge-3 { grid-column: 2; grid-row: 3; }
        .gauge-4 { grid-column: 2; grid-row: 4; }

        /* Левые кнопки (по центру блока, визуально как gauges) */
        .button-1 { grid-column: 3; grid-row: 1; }
        .button-2 { grid-column: 3; grid-row: 2; }
        .button-3 { grid-column: 3; grid-row: 3; }
        .button-4 { grid-column: 3; grid-row: 4; }





        
        /* Центр (rudder + лодка) */
        .rudder-wrapper {
            grid-column: 4;
            grid-row: 1 / span 4;
            justify-self: center;
            align-self: center;

            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
        }

        .boat-image {
            width: 12vw;
            max-width: 140px;
            transform: scale(1);
        }

        /* Правые кнопки */
        .button-5 { grid-column: 5; grid-row: 1; }
        .button-6 { grid-column: 5; grid-row: 2; }
        .button-7 { grid-column: 5; grid-row: 3; }
        .button-8 { grid-column: 5; grid-row: 4; }

        /* Правые gauges */
        .gauge-5 { grid-column: 6; grid-row: 1; }
        .gauge-6 { grid-column: 6; grid-row: 2; }
        .gauge-7 { grid-column: 6; grid-row: 3; }
        .gauge-8 { grid-column: 6; grid-row: 4; }

        /* Общие отступы и центрирование */
        .gauge-1, .gauge-2, .gauge-3, .gauge-4,
        .gauge-5, .gauge-6, .gauge-7, .gauge-8,
        .button-1, .button-2, .button-3, .button-4,
        .button-5, .button-6, .button-7, .button-8 {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 20px 0; /* добавлено для согласованности с gauges */
        }

        .control-button {
            width: 100%;
            max-width: 140px;
            
        }

        .gauge-placeholder {
            width: 100px;
            height: 100px;
        }

        /* Payload screen layout for screen 2 */
        #screen-2 .button-1 { grid-column: 3; grid-row: 1; }
        #screen-2 .button-2 { grid-column: 3; grid-row: 2; }
        #screen-2 .button-3 { grid-column: 3; grid-row: 3; }
        #screen-2 .button-4 { grid-column: 5; grid-row: 1; }
        #screen-2 .button-5 { grid-column: 5; grid-row: 2; }
        #screen-2 .button-6 { grid-column: 5; grid-row: 3; }




        /* Payload screen layout for screen 3 */
        #screen-3 .button-1 { grid-column: 3; grid-row: 1; }
        #screen-3 .button-2 { grid-column: 3; grid-row: 2; }
        #screen-3 .button-3 { grid-column: 5; grid-row: 1; }
        #screen-3 .button-4 { grid-column: 5; grid-row: 2; }



    }






        


    /* SIZE SMALL */

        
        @media (min-width: 1400px) {
        .scale-wrapper {
            transform: scale(1);
        }
        }

        @media (max-width: 1399px) and (min-width: 1200px) {
        .scale-wrapper {
            transform: scale(0.9);
        }
        }

        @media (max-width: 1199px) and (min-width: 1025px) {
        .scale-wrapper {
            transform: scale(0.8);
        }
        }

        @media (max-width: 1024px) {
        .scale-wrapper {
            transform: none;
        }
        }


        @media (min-width: 551px) and (max-width: 768px) {
        .screen-main {
            display: grid !important;
            grid-template-columns: repeat(4, 1fr);
            grid-auto-rows: min-content;
            gap: 16px;
            padding: 16px;
            justify-items: center;
        }

        .rudder-wrapper {
            grid-column: 2 / span 2;
            grid-row: 2;
            justify-self: center;
        }

            .throttle-wrapper {
            grid-column: 1;
            grid-row: 2; /* или другой ряд, если нужно ниже/выше */
            justify-self: start;
            align-self: center;
            margin-top: 0;
        }

            .gauge-1 { grid-column: 1; grid-row: 1; }
            .gauge-2 { grid-column: 2; grid-row: 1; }
            .gauge-3 { grid-column: 3; grid-row: 1; }
            .gauge-4 { grid-column: 4; grid-row: 1; }
            
            .gauge-5 { grid-column: 1; grid-row: 5; }
            .gauge-6 { grid-column: 2; grid-row: 5; }
            .gauge-7 { grid-column: 3; grid-row: 5; }
            .gauge-8 { grid-column: 4; grid-row: 5; }

            .button-1 { grid-column: 1; grid-row: 3; }
            .button-2 { grid-column: 2; grid-row: 3; }
            .button-3 { grid-column: 3; grid-row: 3; }
            .button-4 { grid-column: 4; grid-row: 3; }

            .button-5 { grid-column: 1; grid-row: 4; }
            .button-6 { grid-column: 2; grid-row: 4; }
            .button-7 { grid-column: 3; grid-row: 4; }
            .button-8 { grid-column: 4; grid-row: 4; }


        }



    /* HUGE SIGN & ANIMATION LOAD */

    /* HUGE SIGN */
    #throttle-indicator{
    position: fixed;
    top: 50%; left: 50%;
    transform: translate(-50%, -50%);
    font-size: 30vh;
    font-weight: bold;
    color: rgba(255,255,255,0.8);
    text-shadow: 0 0 30px rgba(255,255,255,0.8);
    z-index: 100000;
    pointer-events: none;
    opacity: 0;
    transition: opacity .2s ease;
    }
    #throttle-indicator.show{ opacity: 1; }



    /* ANIMATION LOAD */

    /* OVERLAY */
    #start-loader{
    position: fixed;
    inset: 0;
    display: grid;
    place-items: center;
    z-index: 100001;      /* above #throttle-indicator */
    pointer-events: none;
    opacity: 0;
    transition: opacity .2s ease;
    }
    #start-loader.show{ opacity: 1; }

    /* Fullscreen slot */
    #start-loader .loader-slot{
    width: 100vw; height: 100vh;
    display: grid; place-items: center;
    background: rgba(0,0,0,0.45);
    font: 600 18px/1.2 Inter, system-ui, sans-serif;
    color: #fff; text-transform: uppercase; letter-spacing: .08em;
    }

    /* (optional) background pulse – remove if you don't use it */
    #start-loader.show .loader-slot{
    animation: startLoaderPulse 1.2s ease-in-out infinite;
    }

    /* POWER icon scale (3×) */
    #start-loader .start-power{
    width: 480px; height: 480px;
    display: grid; place-items: center;
    }
    #start-loader .start-power svg{
    width: 300px; height: 300px; display: block;
    }

    /* (optional) CSS spinner fallback size */
    #start-loader .start-spinner{
    width: 480px; height: 480px; display: grid; place-items: center;
    }
    #start-loader .start-spinner__ring{
    width: 216px; height: 216px; border-width: 18px;
    }

    /* POWER icon root: enable GPU hint for jitter */
    .start-power{ will-change: transform, filter; }

    /* Track circle (latest: black) */
    .start-power__track{
    fill: none;
    stroke: #000000;
    stroke-width: 10;
    }

    /* Progress arc (pathLength=1), starts at 1 o’clock, jerky fill with easing */
    .start-power__progress{
    --C: 1;
    --S: var(--start-frac, 0.0833333);    /* 30°/360 */
    --ARC: var(--sweep-frac, 0.8333333);  /* 300°/360 */

    fill: none;
    stroke: #ffffff;
    stroke-width: 10;
    stroke-linecap: round;

    stroke-dasharray: 0 var(--C);
    transform-origin: 50% 50%;
    transform: rotate(-90deg);
    stroke-dashoffset: calc(-1 * var(--S));

    /* last chosen timing: cubic-bezier(.42,0,.58,1) */
    animation: startPowerFillJerk var(--fill-ms,2000ms) cubic-bezier(.42,0,.58,1) forwards;
    filter: drop-shadow(0 0 6px rgba(171,171,171,0.45));
    }

    /* Jerky/stuttered growth */
    @keyframes startPowerFillJerk{
    0%   { stroke-dasharray: 0                        var(--C); }
    8%   { stroke-dasharray: calc(var(--ARC)*0.04)    var(--C); } /* gentle jump */
    10%  { stroke-dasharray: calc(var(--ARC)*0.10)    var(--C); }
    13%  { stroke-dasharray: calc(var(--ARC)*0.12)    var(--C); }
    25%  { stroke-dasharray: calc(var(--ARC)*0.22)    var(--C); }
    35%  { stroke-dasharray: calc(var(--ARC)*0.38)    var(--C); }
    45%  { stroke-dasharray: calc(var(--ARC)*0.41)    var(--C); }
    60%  { stroke-dasharray: calc(var(--ARC)*0.60)    var(--C); }
    70%  { stroke-dasharray: calc(var(--ARC)*0.63)    var(--C); }
    82%  { stroke-dasharray: calc(var(--ARC)*0.78)    var(--C); }
    90%  { stroke-dasharray: calc(var(--ARC)*0.82)    var(--C); }
    91%  { stroke-dasharray: calc(var(--ARC)*0.985)   var(--C); } /* late squeeze */
    100% { stroke-dasharray: var(--ARC)               var(--C); }
    }

    /* Jitter (applies while filling) */
    .start-power.is-booting{
    animation: startPowerJitter var(--fill-ms,2000ms) ease-in-out;
    will-change: transform, filter;
    }
    @keyframes startPowerJitter{
    0%   { transform: translate(0,0);           filter: brightness(1); }
    8%   { transform: translate(-1.2px,-0.8px); filter: brightness(1.02); }
    16%  { transform: translate(1.6px,0.4px);   filter: brightness(0.98); }
    24%  { transform: translate(-0.8px,1.2px);  filter: brightness(1.01); }
    36%  { transform: translate(2px,-0.4px);    filter: brightness(0.99); }
    48%  { transform: translate(-1.6px,0.8px);  filter: brightness(1.02); }
    62%  { transform: translate(1.2px,-1.2px);  filter: brightness(0.99); }
    76%  { transform: translate(-1px,0.4px);    filter: brightness(1.01); }
    88%  { transform: translate(0.8px,-0.6px);  filter: brightness(1.00); }
    100% { transform: translate(0,0);           filter: brightness(1); }
    }

    /* Vertical bar (phase 2) */
    .start-power__line{
    stroke: #ffffff;
    stroke-width: 10;
    stroke-linecap: round;
    opacity: 0;
    }
    .start-power.is-filled .start-power__line{
    animation: startPowerLine var(--line-ms,1000ms) ease forwards;
    filter: drop-shadow(0 0 8px rgba(115,115,115,0.65));
    }
    @keyframes startPowerLine{ from{opacity:0} to{opacity:1} }




    /* MODAL GAUGES PANEL */


            .gauges-button-panel {
            display: flex;            /* vertical stack */
            flex-direction: column;
            align-items: stretch;     /* children take full width */
            position: absolute;
            top: 50%;
            left: 3vh;
            transform: translateY(-50%);
            z-index: 999;

            width: 128px;
            height: 896px;            /* total column height */
            }

            .gauges-panel {
            position: static;
            z-index: 999;

            width: 128px;
            height: 736px;
            background-color: black;
            border-radius: 6px;

            display: flex;
            flex-direction: column;
            justify-content: space-evenly;
            }

            .gauge-block {
            width: 100%;
            text-align: center;
            color: white;
            font-family: sans-serif;
            font-size: 16px;
            font-weight: 500;
            }

            .gauge-icon {
            opacity: 1;
            filter: none;
            mix-blend-mode: normal;
            }

            /* When safety sits to the right of the gauges panel */
            .gauges-button-panel.side-safety .safety-block {
            /* width stays the same; position will be set inline by JS */
            width: 128px;
            }
            .gauges-button-panel.side-safety .kill-all-btn {
            width: 100%;
            }


            /* CSS-only switch: when safety moves to the right, fix parent height */
            @media (max-height: 1024px) {
            .gauges-button-panel {
                height: 736px;                 /* parent becomes 736px tall */
                overflow: visible;             /* allow the side block to overflow */
            }

            .gauges-button-panel .safety-block {
                position: absolute;
                left: calc(100% + 12px);       /* gap to the right of the panel */
                bottom: 0px;                 /* align bottoms: 896 - 736 = 160 */
                margin-top: 0;
                width: 128px;
            }
            }




       /* Active Helm block */

            /* Active Helm block */
            .active-helm-gauge {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 4px; 
            }

            .active-helm-gauge .gauge-icon {
            width: 24px;
            height: 24px;
            }

            .active-helm-gauge .gauge-label {
            font-family: Inter, sans-serif;
            font-size: 14px;
            font-weight: 500;
            color: #757575;
            line-height: 21px;
            text-align: center;
            }

            .active-helm-gauge .gauge-value {
            font-family: Inter, sans-serif;
            font-size: 16px;
            font-weight: 500;
            color: white;
            line-height: 24px;
            text-align: center;
            }
            


        /* AP Status block */

            /* AP Status block */
            .ap-status-gauge {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 4px;
            }

            .ap-status-gauge .gauge-icon {
            width: 24px;
            height: 24px;
            }

            .ap-status-gauge .gauge-label {
            font-family: Inter, sans-serif;
            font-size: 14px;
            font-weight: 500;
            color: #757575;
            line-height: 21px;
            text-align: center;
            }

            .ap-status-gauge .gauge-value {
            font-family: Inter, sans-serif;
            font-size: 16px;
            font-weight: 500;
            color: white;
            line-height: 24px;
            text-align: center;
            }
        

         /* Speed / Avg gauge block */
        
            .speed-avg-gauge {
            /* --pct controls the white fill width (0%..100%) */
            --pct: 0%;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 6px; /* vertical spacing between rows */
            }

            /* Icon size same as в предыдущих блоках */
            .speed-avg-gauge .gauge-icon {
            width: 24px;
            height: 24px;
            }

            /* Top and bottom text rows */
            .speed-avg-gauge .gauge-line {
            display: inline-flex;
            align-items: baseline;
            gap: 4px;
            color: #ffffff; /* values are white by default */
            font-family: "Roboto Mono", ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
            }

            .speed-avg-gauge .value-lg { /* main value */
            font-size: 16px;
            line-height: 24px;
            font-weight: 700;
            }
            .speed-avg-gauge .unit-lg {
            font-size: 16px;
            line-height: 24px;
            font-weight: 400;
            color: #757575; /* muted unit */
            }

            /* AVG row style */
            .speed-avg-gauge .gauge-line--small .label {
            font-family: "Roboto Mono", ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
            font-size: 12px;
            line-height: 18px;
            font-weight: 700;
            color: #fff;
            }
            .speed-avg-gauge .value-sm {
            font-family: "Roboto Mono", ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
            font-size: 12px;
            line-height: 18px;
            font-weight: 700;
            color: #fff;
            }
            .speed-avg-gauge .unit-sm {
            font-family: "Roboto Mono", ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
            font-size: 12px;
            line-height: 18px;
            font-weight: 400;
            color: #757575;
            }

            /* Mini gauge bar (0..100%) */
            .speed-avg-gauge .mini-gauge {
            /* Base bar */
            width: 100%;
            max-width: 104px;        /* tweak to your panel width */
            height: 2px;             /* bar height */
            background: #2b2b2b;     /* muted gray base */
            border-radius: 3px;
            overflow: hidden;        /* clip inner fill */
            }

            /* White fill controlled by --pct */
            .speed-avg-gauge .mini-gauge-fill {
            /* Fill grows from left to right */
            width: var(--pct);       /* e.g., 39% */
            height: 100%;
            background: #ffffff;
            border-radius: 3px;      /* keeps rounded cap when near 100% */
            transition: width 180ms ease; /* smooth updates */
            }

        

         /* RPM gauge block */
        
            /* ===== RPM gauge block ===== */
            .rpm-gauge {
            --pct: 0%;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 4px;
            }

            .rpm-gauge .gauge-icon {
            width: 24px;
            height: 24px;
            }

            .rpm-gauge .gauge-line {
            display: inline-flex;
            align-items: baseline;
            gap: 4px;
            color: #ffffff;
            font-family: "Roboto Mono", monospace;
            }

            .rpm-gauge .value-lg {
            font-size: 16px;
            line-height: 24px;
            font-weight: 700;
            }
            .rpm-gauge .unit-lg {
            font-size: 16px;
            line-height: 24px;
            font-weight: 400;
            color: #757575;
            }

            /* Mini bar reused from speed gauge */
            .rpm-gauge .mini-gauge {
            width: 100%;
            max-width: 104px;
            height: 2px;
            background: #757575;
            border-radius: 3px;
            overflow: hidden;
            }
            .rpm-gauge .mini-gauge-fill {
            width: var(--pct);
            height: 100%;
            background: #fff;
            border-radius: 3px;
            transition: width 180ms ease;
            }
        

         /* Engine Temperature gauge block */
        
            /* ===== Engine Temperature gauge block ===== */
            .engine-temperature-gauge {
            /* --pct controls fill width (0..100) */
            --pct: 0%;
            /* --bar-color controls the fill color; default is white */
            --bar-color: #ffffff;

            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 4px;
            }

            .engine-temperature-gauge .gauge-icon {
            width: 24px;
            height: 24px;
            }

            .engine-temperature-gauge .gauge-line {
            display: inline-flex;
            align-items: baseline;
            gap: 4px;
            color: #ffffff;
            font-family: "Roboto Mono", ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
            }

            .engine-temperature-gauge .value-lg {
            font-size: 16px;
            line-height: 24px;
            font-weight: 700;
            }
            .engine-temperature-gauge .unit-lg {
            font-size: 16px;
            line-height: 24px;
            font-weight: 400;
            color: #757575;
            }

            /* Mini bar */
            .engine-temperature-gauge .mini-gauge {
            width: 100%;
            max-width: 104px;
            height: 2px;
            background: #757575;     /* base track */
            border-radius: 3px;
            overflow: hidden;         /* clip inner fill */
            }

            .engine-temperature-gauge .mini-gauge-fill {
            width: var(--pct);
            height: 100%;
            background: var(--bar-color);
            border-radius: 3px;       /* rounded end near 100% */
            transition: width 180ms ease, background-color 180ms ease;
            }

            /* Optional state colors (use one of these classes on the root block) */
            .engine-temperature-gauge.cold  { --bar-color: #0059FF; } /* cool blue */
            .engine-temperature-gauge.warm  { --bar-color: #FFBD0A; } /* amber */
            .engine-temperature-gauge.hot   { --bar-color: #D0021B; } /* red */

        

         /* Battery Voltage Gauge block */
        
            .battery-voltage-gauge {
            --pct: 0%;               /* controls fill width */
            --bar-color: #ffffff;     /* default bar color */

            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 4px;
            }

            .battery-voltage-gauge .gauge-icon {
            width: 24px;
            height: 24px;
            }

            /* Text line: muted label + strong value + muted unit */
            .battery-voltage-gauge .battery-line {
            display: inline-flex;
            align-items: baseline;
            gap: 2px;
            text-align: center;
            }

            .label-muted,
            .unit-muted {
            color: #757575;
            font-family: Inter, sans-serif;
            font-size: 16px;
            line-height: 24px;
            font-weight: 500;
            }

            .value-strong {
            color: #ffffff;
            font-family: Inter, sans-serif;
            font-size: 16px;
            line-height: 24px;
            font-weight: 700;
            }

            /* Mini bar (same logic as RPM/Speed) */
            .battery-voltage-gauge .mini-gauge {
            width: 100%;
            max-width: 104px;
            height: 2px;
            background: #757575;      /* muted gray track */
            border-radius: 3px;
            overflow: hidden;
            }

            .battery-voltage-gauge .mini-gauge-fill {
            width: var(--pct);
            height: 100%;
            background: var(--bar-color);
            border-radius: 3px;
            transition: width 180ms ease;
            }

        

         /* Fuel Gauge block */
        
            .fuel-gauge{
            /* --pct controls the white fill width (0..100%) */
            --pct: 0%;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 6px; /* vertical spacing between rows */
            }

            .fuel-gauge .gauge-icon{
            width: 24px;
            height: 24px;
            }

            /* Top and bottom text rows (values + units) */
            .fuel-gauge .gauge-line{
            display: inline-flex;
            align-items: baseline;
            gap: 4px;
            text-align: center;
            justify-content: center;
            color: #ffffff;
            font-family: "Roboto Mono", ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
            }

            .fuel-gauge .value-lg{
            font-size: 16px;
            line-height: 24px;
            font-weight: 700;
            }
            .fuel-gauge .unit-lg{
            font-size: 16px;
            line-height: 24px;
            font-weight: 400;
            color: #757575;
            }

            /* Mini bar like Speed/RPM */
            .fuel-gauge .mini-gauge{
            width: 100%;
            max-width: 104px;      /* keep consistent with other gauges */
            height: 2px;
            background: #757575;   /* base track */
            border-radius: 3px;
            overflow: hidden;
            }
            .fuel-gauge .mini-gauge-fill{
            width: var(--pct);     /* e.g., 37% */
            height: 100%;
            background: #ffffff;   /* fill color */
            border-radius: 3px;
            transition: width 180ms ease;
            }

            /* Burn rate row styling (uses Inter per your mock for mixed text) */
            .fuel-gauge .gauge-line--rate{
            font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
            color: #757575;        /* muted default */
            }
            .fuel-gauge .value-rate{
            color: #ffffff;
            font-weight: 500;
            font-size: 16px;
            line-height: 24px;
            }
            .fuel-gauge .unit-rate{
            color: #757575;
            font-weight: 500;
            font-size: 16px;
            line-height: 24px;
            }

        


     /* KILL ALL BUTTON */
        

        .safety-block {
        margin-top: auto;
        position: static;
        z-index: auto;

        width: 128px;
        height: 128px;

        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        gap: 4px;  /* optional: spacing between title and button */
        }

        /* Make "Safety" label normal weight */
        .safety-block .drawer-button-title {
        font-weight: 400; /* normal */
        }


        .kill-all-btn {
        width: 128px;
        height: 90px;
        background-color: #FFBD0A;
        border-radius: 6px;

        display: flex;
        flex-direction: column;
        justify-content: space-evenly;

        color: #000000;
        opacity: 0.8;
        font: 800 16px/44px Inter, system-ui, sans-serif; /* vertical centering */
        letter-spacing: .6px;
        text-transform: uppercase;
        text-align: center;
        cursor: pointer;
        }
                    
        .kill-all-btn:hover  { 
        filter: brightness(1.05); 
        opacity: 1;
        }
        .kill-all-btn:active {
        transform: translateY(1px);
        box-shadow: 0 1px 0 rgba(255,255,255,.10) inset, 0 4px 10px rgba(0,0,0,.5);
        }

        


     /* MODAL DRAWER PANEL */

         /* Tabs container */
        
        .drawer-panel {
            position: absolute;
            top: 50%;
            right: 3vh;
            transform: translateY(-50%);
            z-index: 999;

            width: 288px;
            height: 896px;
            background-color: #303030;
            border-radius: 6px;

            display: flex;
            flex-direction: column;
        }

        /* Tabs container (horizontal row) */
        .drawer-tabs {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            padding: 4px 0 0 0;
            background: #252525;
            border-radius: 6px 6px 0 0;
        }

        /* Tab */
        .drawer-tab {
            flex: 1; /* equal width */
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 6px 0;
            cursor: pointer;
            opacity: 0.2;          /* inactive icons 50% */
            color: #757575; /* inactive gray */
            transition: color 0.2s;
        }

        .drawer-tab.active {
            color: #ffffff; /* active white */
            opacity: 1; /* active icon 100% */
            background-color: #303030; /* darker background */
            border-radius: 4px 4px 0 0; /* only top corners rounded */
        }

        /* Icon */
        .drawer-tab .tab-icon {
            width: 24px;
            height: 24px;
            
        }

        .drawer-tab .tab-icon svg {
            width: 100%;
            height: 100%;
        }

        /* Show only the active pane; hide others */
        .drawer-content .tab-pane { 
            display: none; /* hidden by default */
        }
        .drawer-content .tab-pane.active {
            display: block; /* or flex if you prefer */
        }

        /* Inactive tab on hover becomes semi-transparent */
        .drawer-tab:not(.active):hover {
        opacity: 0.5;
        }


        /* Push bottom bars sideways when viewport is short (DevTools-like effect) */
        @media (max-height: 1024px) {
        :root{
            /* width of the drawer side panel + desired gap */
            --drawer-side-clear: 320px; /* ← set to your actual drawer-panel width */
        }

        .status-bar,
        .debug-panel,
        .info-bar {
            /* devtools-like: reserve space on the right side */
            left: 0;                          /* stick to left edge */
            right: var(--drawer-side-clear);  /* leave free space on the right */
            width: auto;                      /* let left/right define width */
            max-width: calc(100vw - var(--drawer-side-clear));
            position: fixed;                  /* if they are fixed already—this line is harmless */
            /* If they are not fixed in your code, remove this line. */
        }
        }



        
        

         /* Content */
        
        /* === Drawer content layout (skeleton) === */
        .drawer-content{
            background:#303030; /* to merge with active tab bg */
            padding:12px;
            overflow:auto;
        }

        .pane-title{
            /* Title row with optional actions on the right */
            display:flex; 
            align-items:center; 
            justify-content:center;
            margin-bottom:12px;
            font: var(--type-h3);
            color: var(--c-h);
        }
        

        /* Scroll */


        /* Chrome/Safari/Edge */
        .drawer-content::-webkit-scrollbar { width: 8px; }
        .drawer-content::-webkit-scrollbar-track { background: #9b2ca5; }
        .drawer-content::-webkit-scrollbar-thumb { background: #a52c2c; border-radius: 4px; }
        .drawer-content::-webkit-scrollbar-thumb:hover { background: #0c965a; }

        /* Firefox */
        .drawer-content { 
        scrollbar-color: #505050 #303030; /* thumb track */
        scrollbar-width: thin;
        }

        

         /* TAB 1: Boat Control */
        


            /* ===== Communication block (scoped) ===== */

            /* Display container */
            .comm-display{
            display:grid;
            grid-template-columns: 1fr 1px 1fr;  /* two equal halves + divider */
            align-items:center;
            justify-content:space-between;
            gap:16px;
            padding:14px 16px;
            background:#000;
            border-radius:8px;
            }

            /* Single metric cell */
            .comm-metric{
            display:grid;
            grid-template-columns: 1fr 1fr; 
            align-items:center;
            gap:6px;
            font:600 16px/20px Inter, sans-serif;
            color:#fff;
            }
            .comm-metric .display-unit{ color:#9a9a9a; font-weight:500; }

            /* Vertical divider */
            .comm-divider{
            width:1px;
            height:24px;
            background: #757575;
            opacity:1;
            justify-self:center;
            }

            /* Toggle group */
            .comm-toggle{
            margin-top:8px;
            display:flex;
            background:#404040;
            border-radius:8px;
            overflow:hidden;           /* clip inner rounded active */
            }

            /* Toggle buttons */
            .comm-btn{
            flex:1;
            padding:14px 0;
            border:none;
            background:#505050;
            color:#fff;
            font:500 16px/16px Inter, sans-serif;
            cursor:pointer;
            opacity:.5;
            transition:opacity .2s, background .2s;
            }
            .comm-btn:first-child{ border-radius:8px 0 0 8px; }
            .comm-btn:last-child { border-radius:0 8px 8px 0; }

            .comm-btn.active{
            background:#707070;
            opacity:1;
            font-weight:600;
            border-radius:8px;
            }







         /* === SOLO toggle styles (scoped) === */

            /* One block, full width */
            .solo-controls{
            display:block;
            }

            /* Toggle group container */
            .solo-toggle{
            display:flex;
            width:100%;
            background:#404040;
            border-radius:6px;
            overflow:hidden;
            }

            /* Buttons */
            .solo-btn{
            flex:1;
            padding:14px 0;
            border:none;
            background:#404040;
            color:#fff;
            font:500 16px/16px Inter, sans-serif;
            text-align:center;
            cursor:pointer;
            opacity:.5;
            transition:opacity .2s, background .2s;
            }

            /* Endcaps rounding */
            .solo-btn.off{ border-radius:6px; }
            .solo-btn.on { border-radius:6px; }

            /* Active visual */
            .solo-btn.active{
            background:#707070;
            opacity:1;
            font-weight:600;
            border-radius:6px;
            }


            /* === SOLO3 toggle styles (scoped) === */

            /* Container */
            .solo3-controls {
            display: block;
            }

            .solo3-toggle {
            display: flex;
            width: 100%;
            background: #404040;
            border-radius: 6px;
            overflow: hidden;
            }

            /* Buttons */
            .solo3-btn {
            flex: 1;
            padding: 14px 0;
            border: none;
            background: #404040;
            color: #fff;
            font: 500 16px/16px Inter, sans-serif;
            text-align: center;
            cursor: pointer;
            opacity: .5;
            transition: opacity .2s, background .2s;
            }

            /* Endcaps rounding */
            .solo3-btn.off    { border-radius: 6px; }
            .solo3-btn.silent { border-radius: 6px; }          /* middle – no rounding */
            .solo3-btn.on     { border-radius: 6px; }

            /* Active visual */
            .solo3-btn.active {
            background: #707070;
            opacity: 1;
            font-weight: 600;
            border-radius: 6px;
            }


            /* === Pump === */

            /* Horizontal container for two blocks */
            .button-button-row {
            display: grid;          /* Arrange children horizontally */
            flex: 1; 
            grid-template-columns: 1fr 1fr;
            gap: 16px;              /* Space between blocks */
            padding: 10px;
            }


            /* Pump block container */
            .button-button-block {
            display: flex;
            flex-direction: column;
            gap: 8px;
            padding: 0px;
            background: #303030;
            border-radius: 6px;
            color: #fff;
            font-family: Inter, sans-serif;
            }

            .half-relay {
            flex: 1;
            display: grid;
            grid-template-columns: 1fr 1fr;
            background: #404040;
            border-radius: 6px;
            overflow: hidden;
            }


            /* === Active Helm & AP status === */

            .middle-drawer-button {
            width: 100%;
            height: 48px;     /* fixed button height */
            padding: 0 16px;

            background: #404040;
            border: none;
            border-radius: 6px;

            /* Flexbox for icon + text */
            display: flex;
            align-items: center;       /* vertical centering relative to the button height */
            justify-content: center;   /* horizontal centering */
            gap: 8px;

            font-family: Inter, sans-serif;
            font-size: 16px;
            letter-spacing: 0.5px;     /* technical look */
            color: #fff;

            cursor: pointer;
            transition: background 0.2s, transform 0.1s, color 0.2s;
            box-sizing: border-box;
            }

            .middle-drawer-button:hover {
            background: #505050;
            font-weight: 600;
            }

            /* Active state highlight */
            .middle-drawer-button.active {
            background: #757575;
            font-weight: 600;
            }


            /* === Active Helm BUTTON / DISPLAY === */


        

         /* TAB 2: Payload Control */
        
            .drawer-display { 
            display: flex;
            justify-content: center;    /* center horizontally */
            align-items: center;        /* align icon and text vertically in the middle */
            gap: 8px;                   /* space between icon and text */
            padding: 14px 16px;
            background: #000;
            border-radius: 6px;
            font-weight: 500;
            font-size: 16px;
            line-height: 1;             /* consistent vertical alignment */
            width: 100%;
            box-sizing: border-box;
            color: #fff;                /* make text visible */
            }

            .drawer-display .display-icon {
            width: 24px;
            height: 24px;
            display: block;             /* prevent inline misalignment */
            }

            /* BUTTONS */

            /* Exactly two items per row, pushed apart inside narrow pane */
            .payload-button-block {
            display: grid;                        /* keep grid */
            grid-template-columns: 1fr 1fr;    /* two fixed columns */
            column-gap: 8px;                      /* must be <= 14px for 254px pane */
            row-gap: 32px;
            justify-content: space-between;
            padding-left: 0;                      /* free space for two 120px items */
            padding-right: 0;
            margin-top: 42px;
            /* keep existing top/bottom padding, background, colors, etc. */
            }

            /* Ensure grid children don't try to be flex containers accidentally */
            .payload-button-block > div {
            display: block;                        /* avoid unexpected flex behavior */
            width: 120px;                          /* match column width */
            }
        
    
         /* TAB 2: BUTTONS */
        

        /* Button positioning (scaled down from original) */
        /* Control block: width locked to button; height auto to fit label lines */
        /* Control wrapper: let it grow to fit label; keep flex layout */
        .control-button {
        position: relative;
        width: 100px;
        height: auto;                 /* was 90px */
        display: flex;                /* keep column flex */
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
        }

        /* Outer wrappers: do not cap height so the label doesn't force shrink */
        .button-1,
        .button-2,
        .button-3,
        .button-4,
        .button-5,
        .button-6,
        .button-7,
        .button-8 {
        width: 100px;
        height: auto;                 /* was 90px */
        }

        /* SAFETY CAP ICON SIZE AND STYLING (proportionally reduced) */
        .safety-cap {
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 100px;             /* was 110px */
        height: 60px;            /* was 55px */
        background: repeating-linear-gradient(-45deg, #9a7000, #9a7000 12px, black 8px, black 25px);
        border-radius: 6px;      /* was 8px */
        z-index: 200;
        transform-origin: top center;
        transition: transform 0.3s ease-out;
        box-shadow: inset 0 0 0 2px #9a7000, 0 4px 8px rgba(0, 0, 0, 0.4);
        outline: black, 8px;
        cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 8px;          /* was 10px */
        color: rgba(0, 0, 0, 0.7);
        font-weight: bold;
        text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.4);
        outline: inset 2px solid #9a7000;
        }


        .safety-cap:hover {
        box-shadow:
            inset 0 0 0 2px #9a7000,
            0 0 10px 2px rgb(90, 90, 90);
        }

        /* Thinner (by ~1/3) yet dense outline via drop-shadows */
        .safety-cap img {
        width: 34px;
        height: 34px;
        filter:
            brightness(0)
            /* orthogonal offsets: 2px -> 1.33px */
            drop-shadow(1.33px 0 0 #9a7000)
            drop-shadow(-1.33px 0 0 #9a7000)
            drop-shadow(0 1.33px 0 #9a7000)
            drop-shadow(0 -1.33px 0 #9a7000)
            /* diagonal offsets: 3px -> 2px */
            drop-shadow(2px 2px 0 #9a7000)
            drop-shadow(-2px 2px 0 #9a7000)
            drop-shadow(2px -2px 0 #9a7000)
            drop-shadow(-2px -2px 0 #9a7000);
        }

        .safety-cap.open {
        /* keeps your existing percentage-based lift */
        transform: translateX(-50%) translateY(var(--shift-amount, -110%));
        opacity: 0.5;
        }

        /* Base button: hard-lock to 100×60 and prevent flex shrink */
        .control-button button {
        width: 100px;
        height: 60px;
        flex: 0 0 60px;               /* do not shrink in column flex */
        box-sizing: border-box;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgb(30, 30, 30);
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 9px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: inset 0 0 10px rgba(0,0,0,0.3);
        z-index: 1;
        position: relative;
        margin-top: 0;
        }

        .button-icon {
        /* same filter; size is controlled by the asset or other rules */
        filter: brightness(0) saturate(100%) invert(36%) sepia(0%) saturate(0%) hue-rotate(0deg) brightness(95%) contrast(92%);
        }

        /* Armed state */
        .control-button button.armed {
        background-color: black;
        box-shadow: none;
        animation: none;
        }
        .control-button button.armed .button-icon {
        filter: 
        brightness(0) saturate(100%) invert(100%) sepia(0%) 
        saturate(0%) hue-rotate(0deg) brightness(100%) contrast(100%);
        }

        /* Active state */
        .control-button button.active {
        background-color: rgb(0, 202, 198);
        animation: pulse-button 1.5s infinite;
        }
        .control-button button.active .button-icon {
        filter: brightness(0) saturate(100%) invert(75%) sepia(85%) 
        hue-rotate(40deg) brightness(115%) contrast(105%);
        }
        @keyframes pulse-button {
        0%   { background-color: rgb(213, 21, 191); box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.3), 0 0 5px rgb(74, 91, 222); }
        50%  { background-color: rgb(219, 28, 175); box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.3), 0 0 15px rgb(41, 106, 227); }
        100% { background-color: rgb(222, 42, 222); box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.3), 0 0 5px rgb(240, 85, 29); }
        }

        /* On state */
        .control-button button.on {
        background-color: #2d340f;
        animation: pulse-green 1.5s infinite;
        box-shadow: 0 0 0 0px #2d340f, 0 0 12px #536020;
        }
        @keyframes pulse-green {
        0%   { box-shadow: 0 0 0 2px #2d340f, 0 0 5px #90b400; }
        50%  { box-shadow: 0 0 0 2px #2d340f, 0 0 15px #ccff00; }
        100% { box-shadow: 0 0 0 2px #2d340f, 0 0 5px #90b400; }
        }
        .control-button button.on .button-icon {
        filter: brightness(0) saturate(100%) invert(81%) sepia(98%) saturate(500%) hue-rotate(32deg) brightness(120%) contrast(110%);
        animation: icon-brightness-pulse 1.5s ease-in-out infinite;
        }
        @keyframes icon-brightness-pulse {
        0%, 100% { filter: brightness(0) saturate(55%) invert(81%) sepia(98%) saturate(500%) hue-rotate(32deg) brightness(54%) contrast(110%); }
        50%      { filter: brightness(0) saturate(100%) invert(81%) sepia(98%) saturate(500%) hue-rotate(32deg) brightness(120%) contrast(110%); }
        }

        /* Hover for active states */
        .control-button button.armed:hover,
        .control-button button.active:hover,
        .control-button button.on:hover {
        box-shadow: 0 0 10px 2px rgb(100, 100, 100);
        }

        /* Button label (reduced) */
        .button-label {
        margin-top: 6px;         /* was 8px */
        color: #fff;
        text-align: center;
        font-family: Inter, sans-serif;
        font-size: 14px;
        font-weight: 500;
        letter-spacing: 0.5px;     /* technical look */
        line-height: 18px; /* e.g., 16px for compact but readable lines */

        }


        /* Icon: keep it from affecting button height */
        .button-icon {
        width: 24px;
        height: 24px;
        display: block;               /* remove inline baseline gaps */
        filter: brightness(0) saturate(100%) invert(36%) sepia(0%) saturate(0%)
                hue-rotate(0deg) brightness(95%) contrast(92%);
        }

        /* Normalize base size for all eight buttons (wins over generic button rules) */
        .button-1 .control-button button,
        .button-2 .control-button button,
        .button-3 .control-button button,
        .button-4 .control-button button,
        .button-5 .control-button button,
        .button-6 .control-button button,
        .button-7 .control-button button,
        .button-8 .control-button button {
        width: 100px;
        height: 60px;                 /* was auto */
        flex: 0 0 60px;               /* extra guard against shrinking */
        }




        

         /* TAB 3: Engine Status */
        
            
        /* Display block */
        .status-block {
        display: flex;
        flex-direction: column;
        gap: 8px; /* space between header and controls */
        padding: 10px;
        background: #303030;
        border-radius: 6px;
        color: #fff;
        font-family: Inter, sans-serif;
        }

        /* Header */
        .status-header {
        flex: 1;                      /* take remaining space */
        display: flex;
        align-items: center;
        gap: 12px;
        font-size: 14px;
        font-weight: 500;
        opacity: 0.9;
        white-space: nowrap;          /* prevent title from wrapping */
        overflow: hidden;             /* truncate if too long */
        text-overflow: ellipsis;      /* show ... if truncated */
        }

        .status-title {
        font: var(--type-h5);
        color: var(--c-h); /* <- apply the pink you defined */
        }

        .status-icon {
        font-size: 24px;
        }

        /* Controls row */
        .engine-status-controls {
        display: flex;    /* put header and display in one row */
        align-items: center;
        gap: 10px;        /* space between header and display */
        }

        .status-display {
        width: 80px;                  /* fixed width for display */
        display: flex;
        align-items: baseline;
        justify-content: center;
        gap: 4px;
        padding: 6px 6px;
        background: #000;
        border-radius: 6px;
        font-weight: 600;
        font-size: 16px;
        line-height: 20px;
        white-space: nowrap;          /* value + unit stay on one line */
        }

        .status-display-value {
        font-size: 16px;
        font-weight: 500;
        color: #fff;
        }

        .status-display-unit {
        font-size: 16px;
        font-weight: 500;
        color: #757575;
        }


        

         /* TAB 4: Battery Status */
        
            .battery-button-block {
            display: flex;
            flex-direction: column;
            gap: 6px; /* space between header and controls */
            padding: 6px;

            }
            /* Container for the section (unchanged) */
            .battery-block {
            gap: 6px;              /* space between items */
            display: flex;
            flex-direction: column;
            padding: 0 10px;
            background: #303030;
            border-radius: 6px;
            color: #fff;
            font-family: Inter, sans-serif;
            }




            /* TAB 4: Engine Status Ignition, Off | Start, Engine Kill */

            /* Base button */
            .battery-engine-status {
                position: relative;
                height: 48px;
                padding: 2;
                background: #303030;    /* default = state 1 */
                border: none;
                border-radius: 6px;
                display: flex;
                align-items: center;    /* center icon+text vertically */
                justify-content: center;/* center content horizontally */
                gap: 8px;


                font-family: "Roboto", "Segoe UI", "Inter", "Helvetica Neue", Arial, system-ui, -apple-system, "Noto Sans", "Liberation Sans", sans-serif;
                font-size: 16px;
                font-weight: 600;
                letter-spacing: 0.5px;
                color: #fff;

                cursor: pointer;
                transition: background 0.2s, transform 0.1s, color 0.2s;
                box-sizing: border-box;
            }

            /* Hover/pressed */
            /* Blue glow on hover */
            .battery-engine-status:hover {
                background: #808080;
            }

            .battery-engine-status:active { transform: scale(0.98); }


            /* Hide all states by default */
            .battery-engine-status .state-one,
            .battery-engine-status .state-two,
            .battery-engine-status .state-three {
                display: none;
                width: 100%;
                height: 100%;
            }

            /* Show only the state that matches data-state */
            .battery-engine-status[data-state="1"] .state-one   { 
                display: flex; 
                align-items: center; 
                justify-content: center; 
                gap: 8px; }

            .battery-engine-status[data-state="2"] .state-two   { 
                display: flex; 
                align-items: center; 
                border-radius: 6px;
                box-shadow: 0 0 10px rgba(255, 255, 255, 0.253);
                justify-content: space-between; }

            .battery-engine-status[data-state="3"] .state-three { 
                display: flex; 
                align-items: center; 
                justify-content: center; 
                gap: 8px; }

            /* Split layout (state 2) */
            .battery-engine-status .half {
                flex: 1;
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 8px;
                height: 100%;
                transition: background 0.2s, transform 0.1s;
                cursor: pointer; /* make it clickable */
            }

            /* Hover effect on halves */
            .battery-engine-status .half:hover {
                background: rgba(255,255,255,0.1);
            }

            /* Hover effect on halves */
            .battery-engine-status .half-off:hover {
                border-radius: 6px 0 0 6px;
            }






            /* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/

            /* On hover of the left half, remove the parent's glow */
            /* Requires :has() support */
            .battery-engine-status[data-state="2"] .state-two {
            transition: box-shadow .2s ease; /* smoother toggle */
            }
            .battery-engine-status[data-state="2"] .state-two:has(.half-off:hover) {
            box-shadow: none; /* hide glow while hovering .half-off */
            }

            /* Your existing hover on the half */
            .battery-engine-status .half-off:hover {
            border-radius: 6px 0 0 6px; /* keep your corner change */
            }










            /* Hover effect on halves */
            .battery-engine-status .half-start:hover {
            border-radius: 0 6px 6px 0;
            }

            /* Pressed effect */
            .battery-engine-status .half:active {
            transform: scale(0.97);
            }


            .battery-engine-status .divider {
            width: 1px;
            height: 24px;
            background: #fff;
            opacity:1;
            }

            /* Icon + label */
            .battery-engine-status .button-icon {
            width: 24px;
            height: 24px;
            flex-shrink: 0;
            filter: brightness(0) invert(1);   /* white */
            transition: filter 0.2s;
            }
            .battery-engine-status .battery-engine-label {
            color: #fff;
            transition: color 0.2s;
            }

            /* Ensure label stays white in all states (can be tuned per state if needed) */
            .battery-engine-status[data-state="2"] .battery-engine-label,
            .battery-engine-status[data-state="3"] .battery-engine-label {
            color: #fff;
            }

            /* --- state backgrounds --- */
            .battery-engine-status[data-state="1"] { background:#606060; } /* single (gray) */
            .battery-engine-status[data-state="2"] { background:#909090; } /* split */
            .battery-engine-status[data-state="3"] { background:#bbbbbb;   
                animation: blue-pulse 2.2s ease-in-out infinite; /* smooth, even pulse */
            } 

  
            /* Keyframes: keep color, change blur/intensity slightly */
            @keyframes blue-pulse {
            0%, 100% { box-shadow: 0 0 8px rgba(255, 255, 255, 0.35); } /* base */
            50%      { box-shadow: 0 0 14px rgba(255, 255, 255, 0.75); } /* brighter */
            }

            /* Respect reduced motion */
            @media (prefers-reduced-motion: reduce) {
            .battery-engine-status:hover { animation: none; box-shadow: 0 0 10px rgba(255, 255, 255, 0.55); }
            }


            /* --- hover per state (place AFTER the rules above) --- */
            .battery-engine-status[data-state="1"]:hover { 
            background:#707070;          /* darker gray on hover */
            box-shadow: 0 0 14px rgba(255, 255, 255, 0.15);
            }

            .battery-engine-status[data-state="3"]:hover { 
            background:#909090;          /* slightly darker green on hover */
            }

            /* Ensure label can host an overlay */
            .battery-engine-status .battery-engine-label{
            position: relative;      /* create containing block for ::after */
            display: inline-block;   /* stable overlay box */
            }

            /* On hover: hide original text and show replacement */
            .battery-engine-status[data-state="3"]:hover .battery-engine-label{
            color: transparent;      /* hide original string */
            }
            .battery-engine-status[data-state="3"]:hover .battery-engine-label::after{
            content: "Stop Engine";  /* replacement text */
            position: absolute;
            inset: 0;                /* fill the label box */
            display: inline-flex;
            align-items: center;
            justify-content: center;
            color: #fff;             /* choose text color for green bg */
            pointer-events: none;    /* keep hover on the parent */
            }


            /* pressed is fine to keep generic */
            .battery-engine-status:active { transform: scale(0.98); }




            /* TAB 4: House Relay */

            /* Controls row */
            .relay-controls {
            display: grid;
            grid-template-columns: 3fr 2fr; /* two equal columns */
            gap: 10px;
            }

            /* Toggle buttons */
            .drawer-button-relay {
            display: flex;
            background: #404040;
            border-radius: 6px;
            overflow: hidden;
            }

            .relay-btn {
            flex: 1;
            padding: 14px 0;
            border: none;
            background: #404040;
            color: #fff;
            font-size: 16px;
            line-height: 16px;
            font-weight: 500;
            cursor: pointer;
            text-align: center;
            opacity: 0.5;
            transition: opacity 0.2s, background 0.2s;
            }

            .relay-btn.off { border-radius: 6px; }
            .relay-btn.on  { border-radius: 6px; }

            .relay-btn.active {
                background: #707070;
                color: #fff;
                opacity: 1;   /* fully opaque */
                font-weight: 600;
                border-radius: 6px;
            }

            /* White live-outline inside the selected button */
            .relay-btn.live {
            /* inner white stroke that doesn't change layout */
            box-shadow: inset 0 0 0 2px #fff;
            /* keep rounded corners of edge buttons */
            border-radius: inherit;
            transition: box-shadow 0.15s ease;
            }

            /* Optional: a bit clearer hover on the trio */
            .drawer-button-relay .relay-btn:hover {
            opacity: 0.8;
            }

        

         /* TAB 4: BATTERY LINES */
        

            /* Anchor & layer */
            .tab-pane[data-tab="4"] .pane-grid { position: relative; }
            #battery-wires{
            position: absolute; inset: 0;
            width: 100%; height: 100%;
            z-index: 5; pointer-events: none; display: block;
            }

            /* Tokens */
            :root{
            --wire-active:   #c8c8c8;  /* light gray */
            --wire-inactive: #505050;  /* dark gray */
            --wire-width:    1;
            --wire-dash:     2 3;
            --wire-back:     8 8; 
            }

            /* State by track */
            #battery-wires .wire-track{ --wire-stroke: var(--wire-inactive); }
            #battery-wires .wire-track.is-active{ --wire-stroke: var(--wire-active); }

            /* Apply stroke once */
            #battery-wires .wire-track line{
            stroke: var(--wire-stroke);
            stroke-width: var(--wire-width);

            vector-effect: non-scaling-stroke;
            }

            /* Variants */
            .wire--dash  line{ stroke-dasharray: var(--wire-dash); }
            .wire--solid line{ stroke-dasharray: var(--wire-back); stroke-width: 2.2;}

            /* ANIMATION */
            /* dashed flow only when the track is active */
            #battery-wires .wire-track.wire--dash.is-active line{
            /* ensure a consistent dash pattern and animate offset */
            stroke-dasharray: 2 3;                  /* one pattern = 5 units */
            animation: wireDash var(--dash-duration, 1.1s) linear infinite;
            }

            #battery-wires .wire-track.wire--solid.is-active line{
            stroke-dasharray: 3 1.75;                  /* one pattern = 5 units */
            animation: wireDash var(--dash-duration, 1.1s) linear infinite; 
            stroke-width: 2.2; 
            }

            /* non-active dashed tracks do not animate */
            #battery-wires .wire-track.wire--dash:not(.is-active) line{
            animation: none;
            }

            /* keyframes: shift by one full pattern length (2+3=5) */
            @keyframes wireDash{
            to { stroke-dashoffset: -5; }           /* negative = flow to the right/down */
            }

        

         /* TAB 5: Mission Playlist */
        
        /* === MISSION CARD === */

        /* Container */
        .mission-card {
        background: #404040;
        border-radius: 8px;
        padding: 12px 14px;
        color: #fff;
        font-family: Inter, sans-serif;
        }
        .mission-card + .mission-card { margin-top: 12px; } /* stack spacing */

        /* Header: title left, icon right */
        .mission-card__header {
        display: flex;            /* title left, icon right */
        align-items: center;
        justify-content: flex-start;/* no space-between */
        margin-bottom: 12px;
        }
        .mission-card__title {
        font-weight: 600;
        font-size: 16px;
        line-height: 1.1;
        letter-spacing: 0.2px;
        }
        .mission-card__icon {
        width: 24px;
        height: 24px;
        display: block;
        opacity: 0.9;
        }
        /* Push the first icon to the right edge; the rest follow it */
        .mission-card__icon:first-of-type {
        margin-left: auto;          /* pushes icon group to the right */
        }

        /* Spacing between adjacent icons on the right */
        .mission-card__icon + .mission-card__icon {
        margin-left: 8px;           /* gap between right-side icons */
        }

        /* List */
        .mission-card__list {
        display: flex;
        flex-direction: column;
        gap: 6px;                 /* vertical spacing between rows */
        }
        .mission-card__item {
        display: grid;            /* icon + text */
        grid-template-columns: 28px 1fr;
        align-items: center;
        column-gap: 8px;
        }
        .mission-card__item-icon {
        width: 24px;
        height: 24px;
        display: block;
        opacity: 0.9;
        }
        .mission-card__item-text {
        font: var(--type-h5);
        color: var(--c-h); /* <- apply the pink you defined */
        }



        /* === MISSION PLEER === */

            .mission-pleer-block {
            display: flex;
            flex-direction: column;
            gap: 4px;
            padding-bottom: 12px;
            background: #303030;
            border-radius: 6px;
            color: #fff;
            font-family: Inter, sans-serif;
            }

            .mission-pleer {
            background: #404040;
            border-radius: 8px;
            padding: 8px 14px;
            color: #fff;
            font-family: Inter, sans-serif;
            }



            /* ======= Mission-PLEER styles (scoped) ======= */
            /* Layout of the top line */
            .mission-pleer .mission-meta{
            display:grid;
            grid-template-columns: 1fr auto 1fr;  /* time — title — time */
            gap:12px;
            align-items:center;
            margin-bottom:10px;
            font-variant-numeric: tabular-nums;   /* even monospaced digits */
            }
            .mission-pleer .meta-time{
            color:#fff; opacity:.9; font-weight:600;
            }
            .mission-pleer .meta-time:last-child{ text-align:right; }
            .mission-pleer .meta-title{
            color:#fff; font-weight:600; opacity:.9;
            }



            /* Timeline track */
            .mission-pleer .mission-timeline{ position:relative; margin:6px 0 12px; }
            .mission-pleer .timeline-track{
            position:relative;
            height:4px;
            background:#6a6a6a;
            border-radius:999px;
            }
            /* end caps (light dots) */
            .mission-pleer .timeline-track::before,
            .mission-pleer .timeline-track::after{
            content:""; position:absolute; top:50%; width:8px; height:8px;
            background:#bfbfbf; border-radius:50%; transform:translateY(-50%);
            }
            .mission-pleer .timeline-track::before{ left:-6px; }
            .mission-pleer .timeline-track::after{ right:-6px; }



            /* Waypoints */
            /* Make waypoint labels visible inside the dot */
            .mission-pleer .mission-waypoint{
            position: absolute; top: 50%;
            width: 12px; height: 12px; border-radius: 50%;
            background: #d9d9d9;
            transform: translate(-50%, -50%);
            box-shadow: inset 0 0 0 2px #404040;

            /* center the text and make it readable */
            display: flex;                    /* center label horizontally/vertically */
            align-items: center;
            justify-content: center;
            font: 700 10px/12px Inter, system-ui, sans-serif; /* tight line height */
            }
            /* Reserve space under the track for labels */
            .mission-pleer .mission-timeline { padding-bottom: 12px; } /* 8px dot + 15px gap ~ 22px */

            /* Waypoint label 15px below the dot */
            .mission-pleer .mission-waypoint[data-label]::after{
            content: attr(data-label);         /* take text from data-label */
            position: absolute;
            top: calc(100% + 5px);            /* 15px under the bottom of the dot */
            left: 50%;
            transform: translateX(-50%);
            font: 500 12px/1 Inter, system-ui, sans-serif; /* compact line height */
            color: #ffffff;
            white-space: nowrap;
            pointer-events: none;              /* label doesn't catch hover/clicks */
            z-index: 2;
            }

            /* Keep cursor above labels if they overlap */
            .mission-pleer .mission-cursor { z-index: 3; }


            /* Yellow cursor */
            .mission-pleer .mission-cursor{
            position:absolute; top:50%;
            width:16px; height:16px; border-radius:50%;
            transform:translate(-50%,-50%);
            box-shadow: inset 0 0 0 2px #ffffff;
            background:transparent;
            transition:left .22s ease;
            pointer-events:none;
            }




            /* Controls row */
            .mission-pleer .mission-controls{
            display:grid;
            grid-template-columns: auto 1fr auto;
            align-items:center;
            gap:12px;
            margin-top:8px;
            }
            .mission-pleer .pleer-buttons { display:flex; gap:4px; }
            .mission-pleer .pleer-data{
            margin-left:auto;
            text-align:right;
            display:flex; flex-direction:column; gap:0px;
            color:#bfbfbf;
            }

            .mission-pleer .pleer-btn{
            height:28px; min-width:28px;
            display:inline-flex; align-items:center; justify-content:center;
            background:#2e2e2e; color:#fff; border:0px solid #5a5a5a;
            border-radius:6px; cursor:pointer;
            transition:filter .12s ease, transform .04s ease;
            }
            .mission-pleer .pleer-btn:hover{ filter:brightness(1.08); }
            .mission-pleer .pleer-btn:active{ transform:translateY(1px); }
            .mission-pleer .pleer-btn[disabled]{ opacity:.4; cursor:default; }




            /* ======= PLEER DATA styles ======= */

            .mission-name{
            /* small caps look */
            font: var(--type-h5);
            color: var(--c-h); /* <- apply the pink you defined */
            text-align: center;     /* center the text itself */
            }
            .mission-value {
            font-family: Inter, system-ui, sans-serif;
            font-weight: 600;
            font-size: 14px;
            color: #ffffff;  /* brighter than unit */
            }


            .pleer-data-item {
            display: inline-flex;     /* single row */
            align-items: center;      /* vertical centering */
            gap: 4px;                 /* spacing between icon and text */
            height: 20px;             /* = icon box height */
            white-space: nowrap;      /* prevent wrapping that causes jumps */
            }

            .pleer-data-name {
            /* small caps look */
            font-family: Inter, system-ui, sans-serif;
            font-weight: 500;
            font-size: 12px;
            letter-spacing: 0.6px;   /* tech look */
            color: #858585;        /* muted gray */
            }

            /* Value text (e.g., "Locked") */
            .pleer-data-value {
            font-family: Inter, system-ui, sans-serif;
            font-weight: 600;
            font-size: 12px;
            color: #ffffff;  /* brighter than unit */
            }

            .pleer-data-unit {
            /* small caps look */
            font-family: Inter, system-ui, sans-serif;
            font-weight: 500;
            font-size: 12px;
            letter-spacing: 0.6px;   /* tech look */
            color: #858585;        /* muted gray */
            }





        

         /* TAB 6: Safety */
        
        .drawer-button-display.fullwidth {
        display: flex;
        justify-content: center;    /* center content horizontally */
        align-items: center;
        gap: 4px;
        padding: 14px 16px;
        background: #000;
        border-radius: 6px;
        font-weight: 500;
        font-size: 16px;
        line-height: 20px;
        width: 100%;                /* stretch to full width */
        box-sizing: border-box;      /* include padding in width */
        }

        .button-block {
        display: flex;
        flex-direction: column;
        gap: 8px; /* space between header and controls */
        padding: 10px;
        background: #303030;
        border-radius: 6px;
        color: #fff;
        font-family: Inter, sans-serif;
        }

        .big-drawer-button {
        width: 100%;
        height: 48px;               /* fixed button height */
        padding: 0;              /* remove extra padding */

        background: #707070;
        border: none;
        border-radius: 6px;

        /* Flexbox for icon + text */
        display: flex;
        align-items: center;       /* vertical centering relative to the button height */
        justify-content: center;   /* horizontal centering */
        gap: 8px;

        font-family: Inter, sans-serif;
        font-size: 16px;
        font-weight: 600;
        letter-spacing: 0.5px;     /* technical look */
        color: #fff;

        cursor: pointer;
        transition: background 0.2s, transform 0.1s, color 0.2s;
        box-sizing: border-box;
        }

        .big-drawer-button .button-icon {
        width: 24px;
        height: 24px;
        align-self: center; 
        flex-shrink: 0;
        filter: brightness(0) invert(1);
        transition: filter 0.2s;
        }

        .big-drawer-button .button-drawer-label {
        color: #fff;
        transition: color 0.2s;
        display: inline-block;    /* behaves well with flex parent */
        }



        /* Hover */
        .big-drawer-button.active:hover {
        background: #555555;
        }

        .big-drawer-button:hover {
        background: #808080;
        }

        /* Pressed */
        .big-drawer-button:active {
        transform: scale(0.98);
        }

        /* Active state */
        .big-drawer-button.active {
        background: #505050;
        }

        .big-drawer-button.active .button-drawer-label {
        color: #757575; /* gray text */
        }

        .big-drawer-button.active .button-icon {
        filter: brightness(0) saturate(100%) invert(46%) sepia(0%) saturate(0%) hue-rotate(181deg) brightness(95%) contrast(90%);
        }


        

         /* TAB 7: Assets */
        
       
        .pane-grid{
            /* Responsive grid for small info cards */
            display:grid; grid-template-columns: 1fr; gap:4px;
        }
        .pane-card .card-title{ 
            font-size:14px; font-weight:600; margin-bottom:6px; opacity:.9; 
        }
        .pane-card .card-row{ font-size:14px; line-height:18px; display:flex; 
            justify-content:space-between; gap:8px; opacity:.9; 
        }
        /* === Assets list === */
        .assets-list{
            display: flex;
            flex-direction: column;
            gap: 8px;
        }
        /* Single asset card */
        .asset-card{
            background: #404040;
            border: 1px solid #404040;
            border-radius: 4px;
            padding: 10px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            gap: 12px;
        }
        /* Parent: two columns (left info / right metrics) */
        .asset-main {
            display: grid;
            grid-template-columns: 1fr auto; /* left grows, right autosize */
            column-gap: 12px;
            /* shared row heights for both inner grids */
            --row1: 24px; /* title line */
            --row2: 16px; /* subtitle line */
        }
        .asset-icon {
            grid-column: 1;
            grid-row: 1 / span 2;                    /* icon spans both rows */
            width: 24px;
            height: 24px;
        }

        .asset-texts {
            grid-column: 2;
            grid-row: 1 / span 2;                    /* text column also spans both */
            display: grid;
            grid-template-rows: var(--row1) var(--row2);
        }

        .asset-title {
            grid-row: 1;                              /* first row */
            line-height: var(--row1);
        }

        .asset-sub {
            grid-row: 2;                              /* second row */
            font: var(--type-h5);
            color: var(--c-h); /* <- apply the pink you defined */
        }

        /* Right block: two metrics stacked with the same row heights */
        .asset-meta {
            display: grid;
            grid-template-rows: var(--row1) var(--row2);
            row-gap: 0;                               /* exact alignment with left side */
            justify-items: end;                       /* align metrics to the right */
        }

        /* Explicit row mapping (optional but clear) */
        .asset-meta .metric:nth-child(1) { 
            grid-row: 1; /* aligns with title */
        } 
        /* Left block: icon + two text lines aligned to the same row heights */
        .asset-info {
            display: grid;
            grid-template-columns: 24px auto;        /* icon + text column */
            grid-template-rows: var(--row1) var(--row2);
            column-gap: 8px;
            align-items: center;
        }
        .metric{
            display: inline-flex; align-items: center; gap: 6px;
            color: #fff;
            font: 600 16px/16px Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
            white-space: nowrap;
        }
        .metric .m-icon{
            width: 24px; height: 24px;
            color: #fff;

        }
        .metric .unit{
            font: 500 16px/16px Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
            color: #fff;
            white-space: nowrap; overflow: hidden; text-overflow: ellipsis;
        }
        /* --- ASSETS: ensure cards remain visible --- */
        .pane-card {
            /* Card surface + spacing */
            background: #404040;            /* visible against #303030 panel */
            border: 1px solid #404040;      /* make border visible (was #404040 on #404040) */
            border-radius: 6px;
            padding: 6px 10px 6px 10px ;
            margin-bottom: 2px;             /* stack multiple cards */
            color: #fff;                    /* readable text */
        }

        /* Parent layout: two columns (left info / right metrics) */
        .pane-card .asset-main {
            display: grid;
            grid-template-columns: 1fr auto;   /* left grows, right autosize */
            column-gap: 12px;
            /* shared row heights for perfect alignment */
            --row1: 24px; /* title line height */
            --row2: 16px; /* subtitle line height */
        }

        /* Left block: icon + two text lines aligned to shared rows */
        .pane-card .asset-info {
            display: grid;
            grid-template-columns: 24px auto;  /* icon + text column */
            grid-template-rows: var(--row1) var(--row2);
            column-gap: 8px;
            align-items: center;
        }

        .pane-card .asset-icon {
            grid-column: 1;
            grid-row: 1 / span 2;              /* icon spans both rows */
            width: 24px;
            height: 24px;
            opacity:1;
        }

        .pane-card .asset-texts {
            grid-column: 2;
            grid-row: 1 / span 2;
            display: grid;
            grid-template-rows: var(--row1) var(--row2);
        }

        .pane-card .asset-title {
            grid-row: 1;
            font: 600 16px/24px Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
            white-space: nowrap; overflow: hidden; text-overflow: ellipsis;
        }

        .pane-card .asset-sub {
            grid-row: 2;
            font: 500 12px/16px Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
            color: #757575;
            white-space: nowrap; overflow: hidden; text-overflow: ellipsis;
        }

        /* Right block: two metrics aligned to the same two rows */
        .pane-card .asset-meta {
            display: grid;
            grid-template-rows: var(--row1) var(--row2);
            justify-items: start;               /* align metrics to the left edge */
            row-gap: 0;                       /* exact row alignment with the left side */
        }

        .pane-card .asset-meta .metric:nth-child(1) { grid-row: 1; } /* with title */
        .pane-card .asset-meta .metric:nth-child(2) { grid-row: 2; } /* with subtitle */

        .pane-card .metric {
            display: inline-flex;
            align-items: center;
            gap: 6px;
            font: 600 16px/18px Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
            color: #fff;
        }

        .pane-card .metric .m-icon {
            width: 24px; height: 24px;
        }

        .pane-card .metric .unit {
            color: #757575; font-weight: 500;
        }

        

         /* TAB 8: Sensors */
        
        /* Sensor block container */
        .drawer-button-block {
        display: flex;
        flex-direction: column;
        gap: 8px; /* space between header and controls */
        padding: 10px;
        background: #303030;
        border-radius: 6px;
        color: #fff;
        font-family: Inter, sans-serif;
        }

        /* Header */
        .drawer-button-header {
        display: flex;
        align-items: center;
        gap: 6px;
        font-size: 14px;
        font-weight: 500;
        opacity: 0.9;
        }

        .drawer-button-title {
        font: var(--type-h4);
          color: var(--c-h); /* <- apply the pink you defined */
        }

        .drawer-button-icon {
        font-size: 24px;
        }

        /* Controls row */
        .sensor-controls {
        display: grid;
        grid-template-columns: 3fr 2fr; /* two equal columns */
        gap: 10px;
        }

        /* Toggle buttons */
        .drawer-button-toggle {
        display: flex;
        background: #404040;
        border-radius: 6px;
        overflow: hidden;
        }

        .toggle-btn {
        flex: 1;
        padding: 14px 0;
        border: none;
        background: #404040;
        color: #fff;
        font-size: 16px;
        line-height: 16px;
        font-weight: 500;
        cursor: pointer;
        text-align: center;
        opacity: 0.5;
        transition: opacity 0.2s, background 0.2s;
        }

        .toggle-btn.off { border-radius: 6px; }
        .toggle-btn.on  { border-radius: 6px; }

        .toggle-btn.active {
            background: #707070;
            color: #fff;
            opacity: 1;   /* fully opaque */
            font-weight: 600;
        }

        /* Display block */
        .drawer-button-display {
        display: flex;
        align-items: baseline;
        justify-content: center;
        gap: 4px;
        padding: 14px 14px;
        background: #000;
        border-radius: 6px;
        font-weight: 600;
        font-size: 16px;
        line-height: 20px;
        font-family: "Roboto Mono", ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;

        }

        .display-value {
        font-size: 16px;
        font-weight: 500;
        color: #fff;
        }

        .display-unit {
        font-size: 16px;
        font-weight: 500;
        color: #757575;
        }


        


     /* MODAL ACTIVE HELM PANEL */
    
        .helm-display {
        display: flex;
        align-items: baseline;
        justify-content: center;
        gap: 4px;
        padding: 14px 16px;
        background: #000;
        border-radius: 6px;
        font-size: 16px;
        line-height: 20px;
        }

        .helm-display-value {
        font-size: 16px;
        font-weight: 500;
        color: #757575;
        }
    

    

     /* MODAL AUTO PILOT PANEL */
    

        .status-modal {
        width: 170px;
        display: none;
        position: fixed;
        top: 50%; left: 50%;
        transform: translate(-50%, -50%);
        background: #353535;
        border-radius: 6px;
        padding: 20px;
        z-index: 1000;
        }

        .status-modal-content {
        display: flex;
        flex-direction: column;
        gap: 20px;
        }

        .status-modal-header {
        display: flex;
        align-items: center;
        gap: 8px;
        color: white;
        font-size: 16px;
        font-weight: 600;
        }


        .ap-mode-btn {
        width: 100%;
        height: 48px;     /* fixed button height */
        padding: 0;       /* remove extra padding */

        background: #404040;
        border: none;
        border-radius: 6px;

        /* Flexbox for icon + text */
        display: flex;
        align-items: center;       /* vertical centering relative to the button height */
        justify-content: center;   /* horizontal centering */
        gap: 8px;

        font-family: Inter, sans-serif;
        font-size: 16px;
        font-weight: 500;
        letter-spacing: 0.5px;     /* technical look */
        color: #757575;

        cursor: pointer;
        transition: background 0.2s, transform 0.1s, color 0.2s;
        box-sizing: border-box;
        }

        .ap-mode-btn:hover {
        background: #505050;
        color: #fff;
        }
        .ap-mode-btn.active {
        font-weight: 600;
        color: #fff;
        background: #454545;

        }



        /* Modifier when a modal is docked to the drawer */
        .status-modal.is-docked{
        position: fixed;
        transform: none;         /* kill 50/50 centering transform */
        top: auto;               /* we control bottom via JS */
        /* left/right/bottom are set inline via JS */
        max-width: min(560px, 42vw); /* tune as you like */
        overflow: auto;          /* clip if taller than drawer */
        z-index: 10000;
        }





     /* MAGENTA / ERROR / BORDER */


    * {
    outline: 1px dashed rgba(181, 90, 169, 0.01);
    
    }

        /* Gamepad Indicator Styles */
        #joystick-indicator {
            transition: all 0.5s ease;
            opacity: 1;
        }

        #joystick-indicator.disconnected img {
            /* Red color */
            filter: invert(30%) sepia(90%) saturate(6000%) hue-rotate(350deg) brightness(90%) contrast(120%);
        }

        #joystick-indicator.connected img {
            /* Green color */
            filter: invert(50%) sepia(50%) saturate(5000%) hue-rotate(90deg) brightness(100%) contrast(100%);
        }

        #joystick-indicator.hidden {
            opacity: 0;
            width: 0;
            margin: 0;
            padding: 0;
        }


        /* Info Bar icon color schema*/
       /* General Status Indicator Styles */
        #ap-indicator, #companion-indicator, #system-status-indicator {
            transition: all 0.5s ease;
        /*    margin: 0 8px; /* Add some spacing between icons */
        }

        /* Red / Disconnected / Error State */
        #ap-indicator.disconnected img,
        #companion-indicator.disconnected img,
        #system-status-indicator.error img {
            /* Red color */
            filter: invert(30%) sepia(90%) saturate(6000%) hue-rotate(350deg) brightness(90%) contrast(120%);
        }

        /* Green / Connected / OK State */
        #ap-indicator.connected img,
        #companion-indicator.connected img,
        #system-status-indicator.ok img {
            /* Green color */
            filter: invert(70%) sepia(50%) saturate(2000%) hue-rotate(85deg) brightness(120%) contrast(110%);
        } 
        /* End Of Info Bar icon color schema*/

        /* Battery Gauge Low Voltage State */
        .gauge-block.is-low .mini-gauge-fill {
            background-color: #e12d39; /* A standard red color */
        }